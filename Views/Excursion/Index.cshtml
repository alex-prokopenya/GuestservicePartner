@model GuestService.Models.Excursion.ExcursionIndexContext
@{
    ViewBag.Title = ExcursionStrings.Get("Title");

    if (!string.IsNullOrEmpty(Model.Title))
    {
        ViewBag.Title = Model.Title;
    }

    var departurePoint = -10;
}

<script src="http://maps.googleapis.com/maps/api/js?v=3&amp;sensor=false"></script>
@Scripts.Render("~/js/markerwithlabel.js")

@section scripts {
<script type="text/javascript">

    @if (Model.NavigateState !=null && Model.NavigateState.Options != null && Model.NavigateState.Options.departures != null && Model.NavigateState.Options.departures.Length > 0)
    {
      departurePoint = @Model.NavigateState.Options.departures[0];
    }

    var departurePoint = @departurePoint;

    defaults.format = '@ExcursionStrings.ResourceManager.Get("DateTimeFormat")';
    defaults.language =  '@ExcursionStrings.ResourceManager.Get("DateTimeLanguage")';
    var site = site || {};
    site.vm = site.vm || {};
    var map;

    var departureSlugs = [];

    function initialize() {
        var mapOptions = {
            mapTypeControl: false,
            panControl:false,
            rotateControl:false,
            streetViewControl: false,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            center: new google.maps.LatLng(-34.397, 150.644),
            zoom: 8
        };

      map = new google.maps.Map(document.getElementById("map"),mapOptions);

      /*var mapOptions = {
        zoom: 8,
        center: new google.maps.LatLng(-34.397, 150.644)
      };
      map = new google.maps.Map(document.getElementById('map'),
          mapOptions); */
    }

    //google.maps.event.addDomListener(window, 'load', initialize);

    function formatHotelStar(strstar, star) {
        return star;
    }

    function show_hide() {
        var hiddenContent = $("#showFilters").parent().find("div:eq(0)");
        if (hiddenContent.is(":visible")){
            hiddenContent.slideUp(1000);
        } else{
            hiddenContent.slideDown(1000);
        }
        return false;
    }
    function map_resize_multiple_place(m,b) {
        google.maps.event.trigger(m, "resize");
        m.fitBounds(b);
    }
    function map_resize_one_place(m,c) {
        google.maps.event.trigger(m, "resize");
    	m.setCenter(new google.maps.LatLng(c.latitude,c.longitude));
	    m.setZoom(14);
    }
    var def_title =  document.title;

    $(function () {
        "use strict";
        site.vm.excursion = function () {
            var
            categoryImageBaseUrl = '@Url.ApiActionLink("categoryimage", "excursion", new { id = ".id.", w = 70, h = 70 })',
            excursionLargeImageBaseUrl = '@Url.ApiActionLink("catalogimage", "excursion", new { id = ".id.", i = ".i.", w = 760, h = 400 })',
            excursionImageBaseUrl = '@Url.ApiActionLink("catalogimage", "excursion", new { id = ".id.", i = 0, w = 310, h = 150 })',
            excursionPriceBaseUrl = '@Url.ApiActionLink("price", "excursion", new { id = ".id." })',
            languageImageBaseUrl = '@Url.Content("~/images/flags/.id..png")',
            excursionSortOrders = ko.observableArray([
                { name: 'pricedname', text: '@ExcursionStrings.ResourceManager.Get("SortOrderByName")' },
                { name: 'price', text: '@ExcursionStrings.ResourceManager.Get("SortOrderByPrice")' }
                ]),
            // excursionGeographySearchLimit = ko.observable('@GuestService.Settings.ExcursionGeographySearchLimit'),
            partnerAlias = ko.observable('@Model.PartnerAlias'),
            partnerSessionID = ko.observable('@Model.PartnerSessionId'),
            startPointAlias = ko.observable('@Model.StartPointAlias'),
            externalCartID = ko.observable('@Model.ExternalCartId'),

            loadingCounter = ko.observable(0),
            loadingInProgress = ko.computed(function() {
                return loadingCounter() != 0;
            }),

            searchTextInput = ko.observable(),
            searchText = ko.computed(searchTextInput).extend({ throttle: 400 }),
            searchTextInputSkipChanges = false,
            searchDateSkipChanges = false,
            searchDeparturePoints = ko.observableArray(),
            searchDeparturePointsInitialized = ko.observable(false),
            searchDeparturePoint = ko.observable(),
            searchDeparturePointForceUse = ko.observable(false),

            destinationstates = ko.observableArray(),
            categorygroups = ko.observableArray(),
            //ranking = ko.observable(),
            geographies = ko.observableArray(),
            excursions = ko.observableArray(),
            excursionsData = ko.observableArray(),
            searchFlag = ko.observable(false),
            description = ko.observable(),
            pickuphotels = ko.observableArray(),
            prices = ko.observableArray(null),
            priceColumnsCreate = function() { return { departure: false, language: false, extime: false, group: false, closesaletime: false };},
            priceColumns = ko.observable(priceColumnsCreate()),
            excursionSortOrder = ko.observable(excursionSortOrders()[0]),
            excursionCart = ko.observable(),
            filterInitialized = ko.observable(false),
            filterDestinationState = ko.observable(null),
            filterCategorygroups = ko.observableArray([]),
            filterDepartures = ko.observableArray([]),
            filterDestinations = ko.observableArray([]),
            filterLanguages = ko.observableArray([]),
            filterDateChecked = ko.observable(false),
            filterDate = ko.observable(),

            cartinfoPaxSelectAdult = ko.observableArray([]),
            cartinfoPaxSelectChild = ko.observableArray([]),
            cartinfoPaxSelectInfant = ko.observableArray([]),
            cartinfoPrice = ko.observable(),
            cartinfoAdult = ko.observable(),
            cartinfoChild = ko.observable(),
            cartinfoInfant = ko.observable(),
            cartinfoNote = ko.observable(),
            cartinfoName = ko.observable(),
            cartinfoPhone = ko.observable(),
            cartinfoErrors = ko.observableArray([]),
            cartinfoPickUpPoint =  ko.observable(),
            cartinfoPickUpHotel = ko.observable(),

            cartinfoBookingView = ko.observable(false),
            cartinfoMapView = ko.observable(true),

            excursionpricedate = ko.observable(),
            excursionpricedateIsChanging = false,
            pricesNotFound = ko.observable(false),

            operation = {
                loading: (-1),
                category: 1,
                search: 2,
                catalog: 3,
                description: 4
            },

            viewVisibilityCategorygroups = ko.observable(false),
            viewVisibilityGeographies = ko.observable(false),
            viewVisibilityExcursions = ko.observable(false),
            viewVisibilityDescription = ko.observable(false),
            viewVisibilityLoading = ko.observable(false),
            viewVisibilityCurrentView = ko.observable(),

            navigateView = function (v) {
                viewVisibilityCategorygroups(v == operation.category);
                viewVisibilityGeographies(v == operation.search);
                viewVisibilityExcursions(v == operation.search || v == operation.catalog);
                viewVisibilityDescription(v == operation.description);
                viewVisibilityLoading(v == operation.loading);

                viewVisibilityCurrentView(v);
                if (v == operation.catalog) {
                    $('#excursionsortorder').dropdown();
                }
            },
            reset = function(id,obj,ex) {
                prices(null);
                doExcursionPrice(id, obj);

                var mapOptions = {
                    mapTypeControl: false,
                    panControl:false,
                    rotateControl:false,
                    streetViewControl: false,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                var map = new google.maps.Map(document.getElementById("map"),mapOptions);

                var depImage = new google.maps.MarkerImage(
                    "http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFD800",
                    new google.maps.Size(21, 34),
                    new google.maps.Point(0,0),
                    new google.maps.Point(10, 34));

                var destImage = new google.maps.MarkerImage(
                    "http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00CC00",
                    new google.maps.Size(21, 34),
                    new google.maps.Point(0,0),
                    new google.maps.Point(10, 34));

                var bounds = new google.maps.LatLngBounds();
                var map_positions = [];

                if(ex.departures && ex.departures.length > 0) {
                    for(var departureIndex in ex.departures) {
                        var departure = ex.departures[departureIndex];
                        if(departure && departure.location && departure.name) {
                            var marker = new MarkerWithLabel({
                                position: new google.maps.LatLng(departure.location.latitude,departure.location.longitude),
                                map: map,
                                icon: depImage,
                                labelContent: departure.name,
                                labelAnchor: new google.maps.Point(22, 0),
                                labelClass: "labels",
                                labelStyle: {opacity: 0.75}
                            });
                            bounds.extend(marker.position);
                            map_positions.push(departure.location);
                        }
                    }
                }

                if(ex.destinations && ex.destinations.length > 0) {
                    for(i=0;i<ex.destinations.length;i++) {
                        if(ex.destinations[i].location != null && ex.destinations[i].name != null) {
                            var marker = new MarkerWithLabel({
                                position: new google.maps.LatLng(ex.destinations[i].location.latitude,ex.destinations[i].location.longitude),
                                map: map,
                                icon: destImage,
                                labelContent: ex.destinations[i].name,
                                labelAnchor: new google.maps.Point(22, 0),
                                labelClass: "labels",
                                labelStyle: {opacity: 0.75}
                            });
                            bounds.extend(marker.position);
                            map_positions.push(ex.destinations[i].location);
                        }
                    }
                }

                cartinfoMapView(map_positions.length > 0);

                if( map_positions.length == 1 )
                    map_resize_one_place(map, map_positions[0]);
                else if( map_positions.length > 0 )
                    map_resize_multiple_place(map, bounds);

                $("#maptoggle").click(function(){
                    $(this).html(($(this).html() == '@ExcursionStrings.ResourceManager.Get("MapShowLink")') ? '@ExcursionStrings.ResourceManager.Get("MapHideLink")' : '@ExcursionStrings.ResourceManager.Get("MapShowLink")');
                    $("#map").animate({ height: (($("#map").height() == 100) ? '400px' : "100px")}, 500, function() {
                        if( map_positions.length == 1 )
                            map_resize_one_place(map, map_positions[0]);
                        else if( map_positions.length > 0 )
                            map_resize_multiple_place(map, bounds);
                    });
                    $('html, body').animate({ scrollTop: $("#map").offset().top-100}, 1000);
                    return false;
                });
            },
            prepareDescription = function (d) {
				//alert(d.excursion.text);
                d.text =  d.excursion.text;
                if (d.pictures) {
                    for (var i = 0; i < d.pictures.length; i++) {
                        d.pictures[i].largeImageUrl = excursionLargeImageBaseUrl.replace('.id.', d.excursion.id).replace('.i.', i);
                    }
                }

                if (d.excursion.languages) {
                    for (var i = 0; i < d.excursion.languages.length; i++) {
                        var alias = d.excursion.languages[i].alias;
                        d.excursion.languages[i].languageImageUrl = languageImageBaseUrl.replace('.id.', alias);
                    }
                }

                if(d.ranking) {
                    ko.utils.arrayForEach(d.ranking.ranks, function (g) {
                        g.rankPct = g.rank*10+'%';
                    });
                    // console.log(d.ranking.ranks);
                }

                if( d.surveynotes && d.surveynotes.length > 0 ) {
                    d.surveynotesView = ko.observableArray();
                    for(var i = 0; i < 3 && i < d.surveynotes.length; i++) {
                        d.surveynotesView.push(d.surveynotes[i]);
                    }
                } else {
                    d.surveynotesView = null;
                }
                d.surveynotesMoreButton = ko.observable(d.surveynotes && d.surveynotes.length > 3);

                return d;
            },

            paramsVersion = 0,
            buildViewParams = function (o) {
                var result = o || {};
                result.sortorder = excursionSortOrder().name;
                result.version = ++paramsVersion;
                return result;
            },
            buildSearchParams = function () {
                var i, j, result = buildViewParams();

                result.destinationstate = filterDestinationState();

                var _search = searchTextInput();
                result.text = (_search && $.trim(_search) != '') ? $.trim(_search) : null;

                result.categories = [];
                for (i = 0; i < filterCategorygroups().length; i++) {
                    var _group = filterCategorygroups()[i];
                    if (_group && _group.items()) {
                        for (j = 0; j < _group.items().length; j++) {
                            var _category = _group.items()[j];
                            if (_category && _category.marked() === true) {
                                result.categories.push(_category.id());
                            }
                        }
                    }
                }

                result.departures = [];
                if( searchDeparturePointForceUse() ) {
                    if( searchDeparturePoint() && searchDeparturePoint().id != 0 ) {
                         result.departures.push(searchDeparturePoint().id);
                         result.searchdeparture = searchDeparturePoint().id;
 
                        //pushHistory
                        //slugs
                         var regionText = departureSlugs[ result.searchdeparture ];

                         if(result.searchdeparture > 1 )
                             history.pushState({ }, def_title + '. ' + regionText , '@Url.Action("", "excursion")/' + regionText.toLowerCase() ); //!!!

                    } else {
                        result.searchdeparture = 0;
                    }
                } else {
                    for (i = 0; i < filterDepartures().length; i++) {
                        var _departure = filterDepartures()[i];
                        if (_departure && _departure.marked() === true) {
                            result.departures.push(_departure.id());
                        }
                    }
                }

                result.destinations = [];
                for (i = 0; i < filterDestinations().length; i++) {
                    var _destination = filterDestinations()[i];
                    if (_destination && _destination.marked() === true) {
                        result.destinations.push(_destination.id());
                    }
                }

                result.languages = [];
                for (i = 0; i < filterLanguages().length; i++) {
                    var _language = filterLanguages()[i];
                    if (_language && _language.marked() === true) {
                        result.languages.push(_language.id());
                    }
                }

                if( filterDateChecked )
                    result.fd = result.ld = filterDate();
                else
                    result.fd = result.ld = null;

                return result;
            },
            applyFilterCategories = function (array, filter) {
                for (var i = 0; i < array.length; i++) {
                    var _group = array[i];
                    if (_group && _group.items()) {
                        for (var j = 0; j < _group.items().length; j++) {
                            var _category = _group.items()[j];
                            if (_category) {
                                var value = (filter && ko.utils.arrayIndexOf(filter, _category.id()) >= 0) ? true : false;
                                if(_category.marked === undefined)
                                    _category.marked = ko.observable(value);
                                else
                                    _category.marked(value);
                            }
                        }
                    }
                }
            },
            applyFilter = function (array, filter) {
                for (var i = 0; i < array.length; i++) {
                    var _item = array[i];
                    if (_item) {
                        var value = (filter && ko.utils.arrayIndexOf(filter, _item.id()) >= 0) ? true : false;
                        if( _item.marked == undefined )
                            _item.marked = ko.observable(value);
                        else
                            _item.marked(value);
                    }
                }
            },
            applySearchParams = function (o) {
                excursionSortOrder((o && o.sortorder) ? ko.utils.arrayFirst(excursionSortOrders(), function (item) { return item.name == o.sortorder; }) : excursionSortOrder());
                var s = (o && o.text && o.text != '') ? o.text : '';
                if( searchTextInput() != s ) {
                    searchTextInputSkipChanges = true;
                    searchTextInput(s);
                }

                if( o ) {

                    if(departurePoint > 0)
                    {
                        o.searchdeparture = departurePoint;
                        departurePoint = -10;
                    }

                    if( o.searchdeparture !== undefined ) {
                        searchDeparturePointForceUse(true);
                        ko.utils.arrayForEach(searchDeparturePoints(), function (d) {
                            if( d.id == o.searchdeparture ) {
                                console.log(412);
                               searchDeparturePoint(d);
                            }
                        });
                    } else {
                        console.log(417);
                        searchDeparturePointForceUse(false);
                        searchDeparturePoint((searchDeparturePoint() && searchDeparturePoint().length > 0) ? searchDeparturePoint()[0] : undefined);
                    }
                }

                applyFilterCategories(filterCategorygroups(), (o && o.categories) ? o.categories : undefined);
                if( (o && o.searchdeparture !== undefined) ) {
                    applyFilter(filterDepartures(), []);
                } else {
                    applyFilter(filterDepartures(), (o && o.departures) ? o.departures : undefined);
                }
                applyFilter(filterDestinations(), (o && o.destinations) ? o.destinations : undefined);
                applyFilter(filterLanguages(), (o && o.languages) ? o.languages : undefined);

                if(o && o.fd && o.ld) {
                    filterDateChecked(true);
                    if(filterDate() != o.fd) {
                        searchDateSkipChanges = true;
                        filterDate(o.fd);
                    }
                } else {
                   filterDateChecked(false);
                }
            },
            prepareExcursion = function (d) {
                if (d && d.excursion && d.excursion.languages) {
                    for (var i = 0; i < d.excursion.languages.length; i++) {
                        var alias = d.excursion.languages[i].alias;
                        d.excursion.languages[i].languageImageUrl = languageImageBaseUrl.replace('.id.', alias);
                    }
                }

                return $.extend({
                    imageUrl: excursionImageBaseUrl.replace('.id.', d.excursion.id),
                    largeImageUrl: excursionLargeImageBaseUrl.replace('.id.', d.excursion.id),
                    mainImageUrl:  excursionImageBaseUrl.replace('.id.', d.excursion.id)//excursionLargeImageBaseUrl.replace('.id.', d.excursion.id).replace('.i.', 0)
					,
					excId:  d.excursion.id
                }, d || {});
            },
            doDepartureInitialize = function(force) {
                // !!!!!!!!!!!!!!!!
                if( force === true || searchDeparturePointsInitialized() === false ) {
                    searchDeparturePointsInitialized(true);
                    site.service.ajax.get('@Url.ApiActionLink("departures", "excursion")', { pa: partnerAlias(), psid: partnerSessionID(), spa: startPointAlias(), ds: filterDestinationState() ? filterDestinationState().id : null },
                        function (result) {


                            var departures = [{ id: 0, name: '@ExcursionStrings.ResourceManager.Get("SearchDeparture_AnyPoint")' }];
                            var needIndex = 0;

                            departureSlugs = [];

                            if( result && result.departures ) {

                                ko.utils.arrayForEach(result.departures, function (d) {

                                    console.log(d.id + ' ' + departurePoint);
                                    if(d.id == departurePoint)
                                        needIndex = departures.length;

                                    if(d.name==null) d.name = '';

                                    departureSlugs[d.id] = d.name.toLowerCase();

                                    departures.push(d);
                                });

                            }

                            //список регионов
                            //поиск по региону
                            console.log('need index is ' + needIndex);

                            searchDeparturePoints(departures);
                            searchDeparturePoint(departures[needIndex]);
                        }
                    );
                }
            },
            doSearchDeparturePointReset = function() {
                console.log(491);
                searchDeparturePointForceUse(false);
                searchDeparturePoint((searchDeparturePoint() && searchDeparturePoint().length > 0) ? searchDeparturePoint()[0] : undefined);
            },
            doCategoriesHistory = function () {
                history.pushState({ cmd: 'categories' }, document.title, null);
                doCategories();
            },
            doCategories = function () {
                var text = searchTextInput();
                if( text && text !== '') {
                    searchTextInputSkipChanges = true;
                    searchTextInput('');
                }

                navigateView(operation.loading);

                if( filterDestinationState() ) {
                    filterDestinationState(null);
                    filterInitialized(false);
                    doDepartureInitialize(true);
                } else {
                    doDepartureInitialize(false);
                }

                if (categorygroups().length == 0) {
                    site.service.ajax.get('@Url.ApiActionLink("destinationsandcategorygroups", "excursion")', { pa: partnerAlias(), psid: partnerSessionID(), spa: startPointAlias() },
                        function (result) {
                            destinationstates([]);
                            if (result && result.destinationstates) {
                                ko.utils.arrayForEach(result.destinationstates, function (g) {
                                    destinationstates.push(g);
                                });
                            }

                            categorygroups([]);
                            if (result && result.categorygroups) {
                                ko.utils.arrayForEach(result.categorygroups, function (g) {
                                    if (g.categories) {
                                        for (var i in g.categories) {
                                            var c = g.categories[i];
                                            g.categories[i] = $.extend({
                                                imageUrl: categoryImageBaseUrl.replace('.id.', c.id)
                                            }, c || {});
                                        }
                                    }
                                    categorygroups.push(g);
                                });
                            }

                            /*if (result && result.ranking) {
                                ranking(result.ranking);
                            } else {
                                ranking(null);
                            }*/

                            navigateView(operation.category);
                        }
                    );
                } else {
                    navigateView(operation.category);
                }
            },
            doSearchHistory = function (o, checkstate) {
                if (history && history.state && history.state.cmd === 'search' &&
                    o && o.text && history.state.o && history.state.o.text && history.state.o.text.length > 0 && o.text.indexOf(history.state.o.text) === 0) {
                    history.replaceState({ cmd: 'search', o: o }, document.title, null);
                } else {
                    history.pushState({ cmd: 'search', o: o }, document.title, null);
                }
                doSearch(o, checkstate);
            },




            doSearch = function (o, checkstate) {
                var doSearchView = 0;
                navigateView(operation.loading);
                if (o && o.text && o.text != "") {
                    geographies([]);

                    doSearchView = operation.search;

                    site.service.ajax.get('@Url.ApiActionLink("search", "excursion")', { s: o.text, spa: startPointAlias() },
                        function (result) {
                            if (result.geography) {
                                geographies([]);
                                ko.utils.arrayForEach(result.geography, function (d) {
                                    geographies.push(d);
                                });

                            }
                        }
                    );
                }
                else {
                    doSearchView = operation.catalog;
                }

                if( (filterDestinationState() ? filterDestinationState().id : 0) != (o.destinationstate ? o.destinationstate.id : 0)) {
                    filterDestinationState(o.destinationstate);
                    filterInitialized(false);
                    doDepartureInitialize(true);
                }

                doDepartureInitialize(false);

                if (!filterInitialized()) {
                    filterInitialized(true);

                    site.service.ajax.get('@Url.ApiActionLink("filters", "excursion")', {
                            pa: partnerAlias(),
                            psid: partnerSessionID(),
                            spa: startPointAlias(),
                            ds: filterDestinationState() ? filterDestinationState().id : null
                        },
                        function (d) {
                            if (d && d.categorygroups) {
                                var _categorygroups = ko.mapping.fromJS(d.categorygroups);
                                applyFilterCategories(_categorygroups(), (o && o.categories) ? o.categories : undefined);
                                filterCategorygroups(_categorygroups());
                            } else {
                                filterCategorygroups([]);
                            }

                            if (d && d.departures) {
                                var _departures = ko.mapping.fromJS(d.departures);
                                applyFilter(_departures(), (o && o.departures) ? o.departures : undefined);
                                filterDepartures(_departures());
                            } else {
                                filterDepartures([]);
                            }

                            if (d && d.destinations) {
                                var _destinations = ko.mapping.fromJS(d.destinations);
                                applyFilter(_destinations(), (o && o.destinations) ? o.destinations : undefined);
                                filterDestinations(_destinations());
                            } else {
                                filterDestinations([]);
                            }

                            if (d && d.languages) {
                                var _languages = ko.mapping.fromJS(d.languages);
                                applyFilter(_languages(), (o && o.languages) ? o.languages : undefined);
                                filterLanguages(_languages());
                            } else {
                                filterLanguages([]);
                            }
                            filterDate();
                        }
                    );
                }

                excursions([]);
                excursionsData([]);
                searchFlag(true);
                site.service.ajax.get('@Url.ApiActionLink("catalog", "excursion")', {
                        pa: partnerAlias(),
                        psid: partnerSessionID(),
                        spa: startPointAlias(),
                        ds: (o && o.destinationstate) ? o.destinationstate.id : null,
                        s: (o && o.text && o.text != "") ? o.text : [],
                        c: (o && o.categories) ? o.categories : [],
                        dp: (o && o.departures) ? o.departures : [],
                        d: (o && o.destinations) ? o.destinations : [],
                        l: (o && o.languages) ? o.languages : [],
                        so: (o && o.sortorder) ? o.sortorder : '',
                        fd: (o && o.fd) ? o.fd : '',
                        ld: (o && o.ld) ? o.ld : '',
                    },
                    function (result) {
                        excursions([]);
                        excursionsData([]);

                        if( o.version == paramsVersion ) {
                            if (result.excursions) {
                                applySearchParams(o, checkstate);
                                excursionsData(result.excursions);
                                for (var i = 0, j = excursionsData().length; i < j && i <= 10 ; i++) {
                                      excursions.push(prepareExcursion(excursionsData()[i]));
                                }
                            }
                            else
                                applySearchParams(o, checkstate);
                            searchFlag(false);

                            navigateView(doSearchView);
                        }
                    }
                );
            },
            doScrollExcursionList = function () {
                if(excursions() && excursionsData() ) {
                    for (var i = excursions().length, j = excursionsData().length, m = i + 10; i < j && i < m; i++) {
                        excursions.push(prepareExcursion(excursionsData()[i]));
                    }
                }
            },
            doDescriptionHistory = function (o) {
                history.pushState({ cmd: 'description', o: o }, document.title, null);
                doDescription(o);


            },

			 doDescriptionText = function (excursionId) {
					$( '#avatar_ex_'+excursionId).hide();
					$( '#ex_discript_'+excursionId).show();
					$( '#ex_discript_shadow'+excursionId).css('box-shadow','inset 0px -50px 50px -20px #ffbc23');
					$('#ex_discript_' + excursionId).html('<img src="@Url.Content("~/images/new/loader.gif")">');
                 site.service.ajax.get('@Url.ApiActionLink("exdescription", "excursion")', {
                     pa: partnerAlias(),
                     ex: excursionId
                 },
                     function (result) {
                         if (result && result.length > 0 && result[0] && result[0].excursion && result[0].excursion.id == excursionId) {
							 var text = result[0].description[0].paragraphs[0];
							 $('#ex_discript_' + excursionId).html(text);
                              /* alert(result[0].description[0].paragraphs[0]); */
							  /* alert(text);  */
                         }
                         else
                             alert('null');
                     }
                 );
             },

			doDescriptiOffText = function (excursionId) {
					$( '#avatar_ex_'+excursionId).show();
					$( '#ex_discript_'+excursionId).hide();
					$( '#ex_discript_shadow'+excursionId).css('box-shadow','none');
             },


            doDescription = function (o) {

                location.href = "@Url.Action("details", "excursion")/"+ o.excursion;

                description(null);
                prices(null);
                cartinfoBookingView(false);
                navigateView(operation.description);

                site.service.ajax.get('@Url.ApiActionLink("exdescription", "excursion")', {
                        pa: partnerAlias(),
                        psid: partnerSessionID(),
                        ex: o.excursion
                    },
                    function (result) {
                        if (result && result.length > 0 && result[0] && result[0].excursion && result[0].excursion.id == o.excursion) {

						//	alert(result[0].excursion.destinations[0].location.latitude);

                            description(prepareDescription(result[0]));
                            if( !o.date && result[0].excursiondates ) {
                                ko.utils.arrayForEach(result[0].excursiondates, function (d) {
                                    if( !o.date && d.allclosed == false && d.isprice == true && d.isstopsale == false ) {
                                        o.date = d.date;
                                    }
                                });
                            }
                            reset(o.excursion, { date: o.date ? o.date : site.utils.date.formatIso(new Date()), navigateprice: (o && o.navigateprice) ? o.navigateprice : false }, result[0].excursion);
                            $('.carousel').carousel({ interval: 5000 });
                        }
                        else
                            description(null);
                    }
                );
            },
            doExcursionPrice = function (id, o) {
                var priceUrl = excursionPriceBaseUrl.replace('.id.', id)
                if (!(o && o.date)) o.date = site.utils.date.formatIso(new Date());
                pricesNotFound(false);
                excursionpricedate(o.date);

                site.service.ajax.get(priceUrl, {
                        ex: id ? [id] : [],
                        pa: partnerAlias(),
                        psid: partnerSessionID(),
                        spa: startPointAlias(),
                        dt: o.date
                    },
                    function (result) {
                        if (description() && description().excursion.id == id) {
                            excursionpricedate(o.date);
                            if (prices() == null) {
                                prices([]);
                                var options = {
                                    selectedDate: site.utils.date.formatIsoDate(site.utils.date.parseIso(o.date)),
                                    selectedDateFormat: 'YYYY-MM-DD',
                                    language: '@Sm.System.Mvc.Language.UrlLanguage.CurrentLanguage',
                                    description: description().excursiondates
                                }
                                $('#excursionpricedate')
                                    .datepaginator(options)
                                    .on('selectedDateChanged', function (event, c) {
                                        if (excursionpricedateIsChanging === false) {
                                            doExcursionPrice(id, { date: site.utils.date.formatIso(c.toDate()) });
                                        }
                                    });
                            } else {
                                try {
                                    excursionpricedateIsChanging = true;
                                    $('#excursionpricedate')
                                    .datepaginator('setSelectedDate', [site.utils.date.formatIsoDate(site.utils.date.parseIso(o.date)), 'YYYY-MM-DD']);
                                } finally {
                                    excursionpricedateIsChanging = false;
                                }
                                prices([]);
                            }

                            if( o && o.navigateprice && o.navigateprice === true ) {
                                doNavigateToPriceList();
                            }
                            //console.log(prices());
                            var columns = priceColumnsCreate();
                            ko.utils.arrayForEach(result, function (d) {
                                if (d.id == id) {
                                    if (d.departures)    columns.departure = true;
                                    if (d.language)      columns.language = true;
                                    if (d.time)          columns.extime = true;
                                    if (d.group)         columns.group = true;
                                    if (d.closesaletime) columns.closesaletime = true;
                                    // var p = ko.mapping.fromJS(d);
                                    prices.push(d);
                                }
                            });
                            priceColumns(columns);
                            pricesNotFound(prices().length == 0);

                        }
                    }
                );
            },

            doExcursionConfirmAddToCart = function(data) {
                cartinfoPrice(data);
                cartinfoAdult(1);
                cartinfoChild(0);
                cartinfoInfant(0);
                cartinfoNote('');
                cartinfoName('');
                cartinfoPhone('');
                cartinfoErrors([]);
                cartinfoPickUpPoint(null);
                cartinfoPickUpHotel(null);

                pickuphotels(null);

                if( !data.pickuppoints ) {
                    var dpoints = [];
                    if (data && data.departures) {
                        ko.utils.arrayForEach(data.departures, function (d) {
                            dpoints.push(d.id);
                        });
                    }
                    site.service.ajax.get('@Url.ApiActionLink("excursionpickuphotels", "excursion")', {
                            ex: data.id,
                            et: (data.time ? data.time.id : null),
                            pa: partnerAlias(),
                            psid: partnerSessionID(),
                            spa: startPointAlias(),
                            dt: data.date,
                            dp: dpoints
                        },
                        function (result) {
                            var hotels = [{name: '@ExcursionStrings.ResourceManager.Get("PickupHotelHint")', ishint: true}];

                            pickuphotels(hotels);
                            if( result ) {
                                ko.utils.arrayForEach(result, function (h) {
                                    pickuphotels.push(h);
                                });
                            }
                        }
                    );
                }

                cartinfoBookingView(true);
               //console.log(cartinfoPrice());
               // $('#confirmpricemodal div#confirmPriceResult').hide();
               // $('#confirmpricemodal div#confirmPriceBody').show();
               // $('#confirmpricemodal').modal({ show: true });
            },
            doExcursionAddToCart = function() {
                var price = cartinfoPrice();
                site.service.ajax.post('@Url.Action("addcart", "excursion")', {
                        pa: partnerAlias(),
                        psid: partnerSessionID(),
                        cid: externalCartID(),
                        excursion: {
                            id: price ? price.id : (-1),
                            date: price ? price.date : null,
                            extime: (price && price.time) ? price.time.id : null,
                            language: (price && price.language) ? price.language.id : null,
                            grouptype: (price && price.group) ? price.group.id : null,
                            // departure: (price && price.departure) ? price.departure.id : null,
                            pickuppoint: (cartinfoPickUpPoint()) ? cartinfoPickUpPoint().id : null,
                            pickuphotel: (cartinfoPickUpHotel() && cartinfoPickUpHotel().id) ? cartinfoPickUpHotel().id : null,
                            pax: { adult: cartinfoAdult(), child: cartinfoChild(), infant: cartinfoInfant() },
                            contact: { name: cartinfoName(), mobile: cartinfoPhone() },
                            note: cartinfoNote()
                        }
                    },
                    function (result) {
                        if( result && result.errormessages ) {
                            cartinfoErrors(result.errormessages);
                        } else {
                            //prices(null);
                            cartinfoBookingView(false);
                            //doExcursionPrice();
                            //console.log(description());
                            reset(description().excursion.id, { date: excursionpricedate() },description().excursion);
                            cartinfoErrors([]);

                            if(site && site.vm && site.vm.shoppingcart && result && result.ordercount) {
                                site.vm.shoppingcart.setOrderCount(result.ordercount);
                            }
                        }
                        $('#confirmpricemodal').modal({ show: true });
                    },
                    function (failresult) {
                        return true;
                    }
                );
            },
            doExcursionAddRatingClick = function(){
                var exid = description().excursion.id;
                $('#confirmaddratingmodal input[name="id"]').val(exid);
                $('#confirmaddratingmodal').modal({ show: true });
            },

            navigateCommand = function (cmd, o) {
                (o || {}).version = ++paramsVersion;
                switch (cmd) {
                    case 'categories':
                        doCategories(); break;
                    case 'search':
                        doSearch(o); break;
                    case 'description':
                        doDescription(o); break;
                }
            },

            doNavigateToPriceList = function() {
                cartinfoBookingView(false);
                $('html, body').animate({
                    scrollTop: $('#excursionPrices').offset().top
                }, 500);
            },

            doSurveyMoreReviewClick = function() {
              var d = description();
              if (d && d.surveynotes && d.surveynotesView && d.surveynotesView()) {
                var index = d.surveynotesView().length,
                    count = 0;

                while(d.surveynotesView().length < d.surveynotes.length && count <= 10) {
                    d.surveynotesView.push(d.surveynotes[index + count]);
                    count += 1;
                }

                d.surveynotesMoreButton(d.surveynotesView().length < d.surveynotes.length);
              } else {
                d.surveynotesMoreButton(false);
              }
            },
            
            searchDeparturePointChanged = function(data, event) {
                if (event.originalEvent) { // user changed
                    searchDeparturePointForceUse((searchDeparturePoint() && searchDeparturePoint().id != 0) ? true : false);
                    doSearchHistory(buildSearchParams());


                }
            };

                for(var i = 0; i <= @GuestService.Settings.CartinfoPaxSelectMaxAdult; i++) {
                    cartinfoPaxSelectAdult.push({value: i, name: i.toString()});
                }
                for(var i = 0; i <= @GuestService.Settings.CartinfoPaxSelectMaxChild; i++) {
                    cartinfoPaxSelectChild.push({value: i, name: i.toString()});
                }
                for(var i = 0; i <= @GuestService.Settings.CartinfoPaxSelectMaxInfant; i++) {
                    cartinfoPaxSelectInfant.push({value: i, name: i.toString()});
                }

                searchText.subscribe(function (value) {
			    /* $('#ex_cont').css('background-image','url(http://exgo.com/guestservice_design/images/new/bg_option.png)'); */
			    $('#ex_cont').animate({top: '184px'}, 800);
			    $(".bk-footer").animate({bottom: '-90px'});
			    $('#footer_ok').attr('value','ok')
			    $("#ex_title").fadeOut();
			    $("#search_box").animate({top: '-10px'}, 800);
			    $('html').css( "overflow", "auto" );


                if( searchTextInputSkipChanges != true ) {
                    var _text = $.trim(value);
                    doSearchHistory(buildViewParams({ text: _text }), true);
                }
                searchTextInputSkipChanges = false;
            });

            filterDateChecked.subscribe(function (value) {
                if( value ) {
                    filterDate('@DateTime.Now.ToString("s")');
                } else {
                    filterDate('');
                }
            });

            filterDate.subscribe(function (value) {
                if(searchDateSkipChanges != true) {
                    doSearchHistory(buildSearchParams());
                }
                searchDateSkipChanges = false;
            });


            return {
                //
                windowHeight: ko.observable($(window).height()+'px'),
                loadingInProgress: loadingInProgress,
                // data
                searchTextInput: searchTextInput,
                searchDeparturePoints: searchDeparturePoints,
                searchDeparturePoint: searchDeparturePoint,
                searchDeparturePointChanged: searchDeparturePointChanged,
                searchDeparturePointForceUse: searchDeparturePointForceUse,

                filterDestinationState: filterDestinationState,
                filterCategorygroups: filterCategorygroups,
                filterDepartures: filterDepartures,
                filterDestinations: filterDestinations,
                filterLanguages: filterLanguages,
                filterDateChecked: filterDateChecked,
                filterDate: filterDate,

                // viewVisibility: viewVisibility,
                viewVisibilityCategorygroups: viewVisibilityCategorygroups,
                viewVisibilityGeographies: viewVisibilityGeographies,
                viewVisibilityExcursions: viewVisibilityExcursions,
                viewVisibilityDescription: viewVisibilityDescription,
                viewVisibilityLoading: viewVisibilityLoading,

                destinationstates: destinationstates,
                categorygroups: categorygroups,
                //ranking: ranking,
                geographies: geographies,
                excursions: excursions,
                searchFlag: searchFlag,
                // preloader: preloader,
                description: description,
                pickuphotels: pickuphotels,

                excursionpricedate: excursionpricedate,
                prices: prices,
                priceColumns: priceColumns,
                pricesNotFound: pricesNotFound,

                excursionSortOrder: excursionSortOrder,
                excursionSortOrders: excursionSortOrders,

                buildSearchParams: buildSearchParams,
                buildViewParams: buildViewParams,
                navigateCommand: navigateCommand,

                cartinfoPaxSelectAdult: cartinfoPaxSelectAdult,
                cartinfoPaxSelectChild: cartinfoPaxSelectChild,
                cartinfoPaxSelectInfant: cartinfoPaxSelectInfant,
                cartinfoPrice: cartinfoPrice,
                cartinfoAdult: cartinfoAdult,
                cartinfoChild: cartinfoChild,
                cartinfoInfant: cartinfoInfant,
                cartinfoNote: cartinfoNote,
                cartinfoName: cartinfoName,
                cartinfoPhone: cartinfoPhone,
                cartinfoErrors: cartinfoErrors,
                cartinfoPickUpPoint: cartinfoPickUpPoint,
                cartinfoPickUpHotel: cartinfoPickUpHotel,
                cartinfoBookingView: cartinfoBookingView,
                cartinfoMapView: cartinfoMapView,

                categoryButtonClick: function () {
                    doSearchDeparturePointReset();
                    doCategoriesHistory();
                },
                catalogButtonClick: function () {
                    doSearchDeparturePointReset();
                    doSearchHistory(buildViewParams());

                },
                destinationstatesItemClick: function (data) {
                    if( data ) {
                        doSearchHistory(buildViewParams({ destinationstate: data }));
                    }
                },
                categoryItemClick: function (data) {
                    if (data) {
                        doSearchHistory(buildViewParams({ categories: [data.id] }));
                    }
                },
                geographyItemClick: function (data) {
                    if (data && data.destinations) {
                        doSearchHistory(buildViewParams({ destinations: data.destinations }));
                    }
                },

				 excursionItemShowText: function (data) {

                    if (data && data.excursion) {

                        doDescriptionText( data.excursion.id);
                    }
                },

				closeExText: function (data) {

                    if (data && data.excursion) {
                        doDescriptiOffText( data.excursion.id);
                    }
                },

                excursionItemClick: function (data) {
                    if (data && data.excursion) {

                        location.href+="details/"+data.excursion.id ;

                        doDescriptionHistory({ excursion: data.excursion.id });
						 $('#ex_cont').css('background-image','url(http://exgo.com/guestservice_design/images/new/bg_option2.png)');
						 $('#search_box').hide();
						 $('#ex_cont').animate({top: '300px'});
						 $('.bk-container').css('background-color','#ffffff');
                    }
                },
                excursionItemBookClick: function (data) {
                    if (data && data.excursion) {
                        doDescriptionHistory({ excursion: data.excursion.id, navigateprice: true, date: filterDateChecked() ? filterDate() : null });
                    }
                },
                scrollExcursionList: function() {
                    doScrollExcursionList();
                },
                filterCategoryItemClick: function (data) {
                    if (data) {
                        data.marked(!data.marked());
                        doSearchHistory(buildSearchParams());
                    }
                },
                setExcursionSortOrder: function (data) {
                    if (data && data.name) {
                        if (excursionSortOrder().name != data.name) {
                            excursionSortOrder(data);
                            doSearchHistory(buildSearchParams());
                        }
                    }
                },
                filterDeparturesItemClick: function (data) {
                    if (data) {
                        data.marked(!data.marked());
                        doSearchHistory(buildSearchParams());
                    }
                },
                filterDestinationItemClick: function (data) {
                    if (data) {
                        data.marked(!data.marked());
                        doSearchHistory(buildSearchParams());
                    }
                },
                filterLanguageItemClick: function (data) {
                    if (data) {
                        data.marked(!data.marked());
                        doSearchHistory(buildSearchParams());
                    }
                },
                filterDateCheckedItemClick: function (data) {
                    if (data) {
                        data.filterDateChecked(!data.filterDateChecked());
                        if( !data.filterDateChecked() )
                            doSearchHistory(buildSearchParams());
                    }
                },
                /*filterDateFlagResetClick: function () {
                    doSearchHistory(buildSearchParams());
                },*/
                excursionPriceItemClick: function (data) {
                    doExcursionConfirmAddToCart(data);
                },
                excursionAddToCartClick: function (data) {
                    doExcursionAddToCart();
                },
                excursionAddRatingClick: function (data) {
                    doExcursionAddRatingClick();
                },
                cartinfoShowPickUpPointMapClick: function() {
                    var map;

                    if(cartinfoPrice().pickuppoints[0].location != null)
                        var myLatlng = new google.maps.LatLng(cartinfoPrice().pickuppoints[0].location.latitude,cartinfoPrice().pickuppoints[0].location.longitude);
                    else
                        var myLatlng = new google.maps.LatLng(0,0);

                    var mapOptions = {
                        mapTypeControl: false,
                        panControl:false,
                        rotateControl:false,
                        streetViewControl: false,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    };
                    map = new google.maps.Map(document.getElementById("map_canvas"),mapOptions);
                    var selImage = new google.maps.MarkerImage(
                        "http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FF0000",
                        new google.maps.Size(21, 34),
                        new google.maps.Point(0,0),
                        new google.maps.Point(10, 34));
                    var othImage = new google.maps.MarkerImage(
                        "http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00CC00",
                        new google.maps.Size(21, 34),
                        new google.maps.Point(0,0),
                        new google.maps.Point(10, 34));
                    var marker = new Array();
                    var bounds = new google.maps.LatLngBounds();
                    if (cartinfoPrice().pickuppoints.length > 0) {
                        for(i=0;i<cartinfoPrice().pickuppoints.length;i++) {
                            if(cartinfoPrice().pickuppoints[i].location != null && cartinfoPrice().pickuppoints[i].name != null) {
                                if(cartinfoPickUpPoint().id == cartinfoPrice().pickuppoints[i].id) var icon_ = selImage; else var icon_ = othImage;
                                marker[i] = new MarkerWithLabel({
                                    position: new google.maps.LatLng(cartinfoPrice().pickuppoints[i].location.latitude,cartinfoPrice().pickuppoints[i].location.longitude),
                                    map: map,
                                    icon: icon_,
                                    labelContent: cartinfoPrice().pickuppoints[i].name,
                                    labelAnchor: new google.maps.Point(22, 0),
                                    labelClass: "labels",
                                    labelStyle: {opacity: 0.75},
                                    pickuppoint: cartinfoPrice().pickuppoints[i]
                                });
                                bounds.extend(marker[i].position);
                                google.maps.event.addListener(marker[i], 'click', function() {
                                    cartinfoPickUpPoint(this.pickuppoint);
                                    $('#mapmodals').modal('hide');
                                });
                            }
                        }
                    } else {
                        bounds.extend(myLatlng);
                    }

                    $('#mapmodals').modal({ show: true });
                    $('#mapmodals').on('shown.bs.modal', function () {
                        if(i == 1) map_resize_one_place(map, (cartinfoPrice().pickuppoints && cartinfoPrice().pickuppoints.length > 0 && cartinfoPrice().pickuppoints[0].location) ? cartinfoPrice().pickuppoints[0].location : myLatlng); else map_resize_multiple_place(map,bounds);
                    });
                },
                excursionBookingCloseClick: function (data) {
                    if (data && data.id) {
                        cartinfoBookingView(false);
                        reset(data.id, { date: excursionpricedate() },description().excursion);
                    }
                },
                navigateBackClick: function() {
                    history.back();

                },
                navigateToPriceListClick: function() {
                    doNavigateToPriceList();
                },
                surveyMoreReviewClick: function() {
                    doSurveyMoreReviewClick();
                }
            };
        } ();
        ko.applyBindings(site.vm.excursion, document.getElementById("excursion_container"));

        $(window).resize(function () {
            // site.vm.excursion.windowHeight($(window).height()+'px');
        });

        $(window).on('popstate', function (e) {
		$('#search_box').show();
		$('.bk-container').css('background-color','transparent');
		$('#ex_cont').animate({top: '184px'}, 800);
		/* $("#excursion_container").animate({top: 'none'}); */
            if (history && history.state && history.state.cmd) {
                site.vm.excursion.navigateCommand(history.state.cmd, history.state.o);
            }
        });

        $(window).scroll(function () {
            var panel = $('#exlistbottompanel');

            if(panel && panel.offset() && ($(window).scrollTop() + $(window).height() + 300 > panel.offset().top + panel.height())) {

                site.vm.excursion.scrollExcursionList();
            }
        });

        if( sm && sm.iframe ) {
            sm.iframe.setOnScroll(function() {
                var panel = $('#exlistbottompanel');
                if(panel && panel.offset() && ($(window).scrollTop() + $(window).height() + 300 > panel.offset().top + panel.height())) {
                    site.vm.excursion.scrollExcursionList();
                }
            });
        }

        @if (Model.NavigateState != null)
        {
            <text>site.vm.excursion.navigateCommand('@Model.NavigateState.Cmd', @Html.ToJson(Model.NavigateState.Options));</text>
        }
        else
        {
            <text>site.vm.excursion.categoryButtonClick();</text>
        }
    });

    var durationToString_Day = '@ExcursionStrings.ResourceManager.Get("DurationDay")',
        durationToString_Days = '@ExcursionStrings.ResourceManager.Get("DurationDays")',
        durationToString_Hour = '@ExcursionStrings.ResourceManager.Get("DurationHour")',
        durationToString_Hours = '@ExcursionStrings.ResourceManager.Get("DurationHours")',
        durationToString_Min = '@ExcursionStrings.ResourceManager.Get("DurationMin")',
        durationToString_Mins = '@ExcursionStrings.ResourceManager.Get("DurationMins")';

    var DurationToString = function(duration) {
        var result = '', index = 0;
        if( duration ) {
            var dayparts = duration.split('.', 2);
            if( dayparts.length > 1 ) {
                var days = parseInt(dayparts[0]);
                result += days + ' ' + (days > 1 ? durationToString_Days : durationToString_Day) + ' ';
                index = 1;
             }

            var timeparts = dayparts[index].split(':');
            var hours = parseInt(timeparts[0]);
            if( hours > 0 ) {
                result += hours + ' ' + (hours > 1 ? durationToString_Hours : durationToString_Hour) + ' ';
            }
            var minutes = parseInt(timeparts[1]);
            if( minutes > 0 ) {
                result += minutes + ' ' + (minutes > 1 ? durationToString_Mins : durationToString_Min) + ' ';
            }
        }
        return result;
    }
</script>
}
@Scripts.Render("~/js/datepaginator.js")
<script id="excursion-price-box" type="text/html">   
 <span style="font-size:12px;">@ExcursionStrings.ResourceManager.Get("PriceFrom")</span> <span data-bind="text: minPrice.price"></span> &nbsp;<span data-bind="text: minPrice.currency"></span>
 
    <div data-bind="if: minPrice" style="text-align:right; display: none;" class="bk-excursion-price">               
         <a href="#" data-bind="click: $root.excursionItemBookClick" style="text-decoration:none;">
            <div class="samo_price_up">
                <div style="float:left;"><img src="@Url.Content("~/images/cartw.png")" /></div>
                <div>
				
				<span style="font-size:12px;">@ExcursionStrings.ResourceManager.Get("PriceFrom")</span> <span data-bind="text: minPrice.price"></span>&nbsp;<span data-bind="text: minPrice.currency"></span></div>
            </div>        
          </a>
          <div class="samo_price_down" >
                <!-- ko template: minPrice.priceType == 0 ?  'excursion-price-box-pax' : 'excursion-price-box-service' --><!-- /ko -->
          </div>          
          <div>
                <a href="#" data-bind="click: $root.excursionItemBookClick" style="margin-top: 5px;"><b>@ExcursionStrings.ResourceManager.Get("BookNowButton")</b></a> 
          </div>
    </div>
</script>
<script id="excursion-price-box-pax" type="text/html">
    <span>@ExcursionStrings.ResourceManager.Get("PriceByPax")</span>
</script>
<script id="excursion-price-box-service" type="text/html">
    <span>@ExcursionStrings.ResourceManager.Get("PriceByService")</span>
</script>

<script>
function open_menu_opt (name_menu) {
$('#menu_opt_'+name_menu).slideToggle();
}


</script>
<style>
div.menu_list {
display: none;
  position: absolute;
  margin-top: 11px;
  margin-left: -25px;
  background-color: #ffbc23;
  z-index: 10;
  padding-left: 0px;
  padding-right: 20px;
}

</style>
<script id="excursion-filter-categorygroup" type="text/o">
    <div data-bind="if: filterCategorygroups().length > 0" class="bk-filter-categorygroup">
        <span style="color: #fff; cursor: pointer;" OnClick="open_menu_opt('cat')">@ExcursionStrings.ResourceManager.Get("ExtraFiltersCategory")</span><br>
        <div data-bind="foreach: filterCategorygroups" >
            <div data-bind="text: name, style: { marginLeft: name != null ? '20px' : '' }" style="color:#777777; font-weight:bold; text-transform: uppercase;"></div>
            <div data-bind="foreach: items"  id="menu_opt_cat" class="menu_list" >
                <div class="checkbox">                                
                    <a class="samo_checked" data-bind="attr: { 'status': marked }, click: $root.filterCategoryItemClick"><label style="float:left; margin-top:0px;"></label></a><span data-bind="text: name"></span> (<span data-bind="text: count"></span>) 
                </div>                                                       
            </div>
        </div>
    </div>
</script>
<script id="excursion-filter-destination" type="text/html">
    <div data-bind="if: filterDestinations().length > 0" class="bk-filter-destination">
            <span style="color: #fff; cursor: pointer;" OnClick="open_menu_opt('des')">@ExcursionStrings.ResourceManager.Get("ExtraFiltersDirection")</span>
        <div data-bind="foreach: filterDestinations" id="menu_opt_des" class="menu_list">
            <div class="checkbox">                       
                <a class="samo_checked" data-bind="attr: { 'status': marked }, click: $root.filterDestinationItemClick"><label style="float:left; margin-top:0px;"></label></a><span data-bind="text: name"></span> (<span data-bind="text: count"></span>) 
                </div>
        </div>
    </div>
</script>
<script id="excursion-filter-departure" type="text/html">
    <div data-bind="ifnot: searchDeparturePointForceUse">
        <div data-bind="if: filterDepartures().length > 0" class="bk-filter-departure">
                <span style="color: #fff; cursor: pointer;" OnClick="open_menu_opt('dep')">@ExcursionStrings.ResourceManager.Get("ExtraFiltersDepartures")</span>
            <div data-bind="foreach: filterDepartures" id="menu_opt_dep" class="menu_list">
                <div class="checkbox">                       
                    <a class="samo_checked" data-bind="attr: { 'status': marked }, click: $root.filterDeparturesItemClick"><label style="float:left; margin-top:0px;"></label></a><span data-bind="text: name"></span> (<span data-bind="text: count"></span>) 
                    </div>
            </div>
        </div>
    </div>
</script>
<script id="excursion-filter-language" type="text/html">
    <div data-bind="if: filterLanguages().length > 0" class="bk-filter-language">
        <span style="color: #fff; cursor: pointer;" OnClick="open_menu_opt('lang')">@ExcursionStrings.ResourceManager.Get("ExtraFiltersLanguage")</span>
        <div data-bind="foreach: filterLanguages" id="menu_opt_lang" class="menu_list">                                                                        
            <div class="checkbox">                                 
                <a class="samo_checked" data-bind="attr: { 'status': marked }, click: $root.filterLanguageItemClick"><label style="float:left; margin-top:0px;"></label></a><span data-bind="text: name"></span> (<span data-bind="text: count"></span>) 
            </div>                           
        </div>
    </div>
</script>
<script id="excursion-filter-date" type="text/html">
    <div class="bk-filter-date">
        <div class="checkbox" style="padding-left:0; margin-top:0;   display: initial;">                              
            <span>
                <span style="color: #fff; cursor: pointer;  " data-bind="attr: { 'status': filterDateChecked }, click: $root.filterDateCheckedItemClick">@ExcursionStrings.ResourceManager.Get("ExtraFiltersDate") 
                    <a class="samo_checked" >
					<label style="float:right; margin-top:0px; display: none;"></label></a>
                </span>
            </span> 
        </div>
        <div class="alldates" style="padding-left:20px; color:#ffbc23; margin-left: -15px; display: inline;position: relative;top: 1px; " data-bind="visible: filterDateChecked() == false">                                                                                                                                
            @ExcursionStrings.ResourceManager.Get("ExtraFiltersAllDates")
        </div>                                                                                                                            
        <div class="onedate input-group date" style="padding-left:20px;   display: inline-block;" data-bind="visible: filterDateChecked() == true"> 
            <input style="border: none; cursor: pointer; background: none; color: #ffbc23;height: 15px;margin: 0px;padding: 0px;margin-top: -4px;margin-left: -15px; box-shadow: none; outline: none;" type="text" class="form-control" readonly maxlength="10" value="" data-bind="sm.datepickergroup: filterDate">          
            <span class="input-group-addon" style="border: none; background: none; "> 
			<!-- <i class="glyphicon glyphicon-calendar"></i> -->
			</span>                              
        </div> 
    </div>
</script>
<script id="excursion-loading" type="text/html">
    <div class="bk-loading">
     <div class="spinner">
      <div class="spinner-container container1">
        <div class="circle1"></div>
        <div class="circle2"></div>
        <div class="circle3"></div>
        <div class="circle4"></div>
      </div>
      <div class="spinner-container container2">
        <div class="circle1"></div>
        <div class="circle2"></div>
        <div class="circle3"></div>
        <div class="circle4"></div>
      </div>
      <div class="spinner-container container3">
        <div class="circle1"></div>
        <div class="circle2"></div>
        <div class="circle3"></div>
        <div class="circle4"></div>
      </div>
    </div>   
   </div>
</script>

<script id="excursion-destination-geography" type="text/html">
    <div class="media" style="margin-bottom: 35px; margin-top: 10px;">
        <span class="pull-left" style="background: #cccccc;">
            <img class="media-object" src="@Url.Content("~/images/geography.png")" alt="@ExcursionStrings.ResourceManager.Get("GeorgaphyTitle")" />
        </span>     
        <div class="media-body">                                
            <div class="row bk-geography-list" data-bind="foreach: destinationstates ">
                <div class="col-md-3 col-xs-6">
                    <a href="#" data-bind="click: $root.destinationstatesItemClick">
                        <h2 class="media-heading" style="text-transform: uppercase; margin:0; padding-bottom: 10px;" data-bind="text: name"></h2>
                    </a>                          
                </div>   
            </div>
        </div>                                      
    </div>              
    <hr style="margin-top:5px;"/>
</script>

<script id="excursion-categorygroups" type="text/html">
    <div data-bind="foreach: categorygroups">
        <div class="row bk-category-group" data-bind="if: group">
            <div class="col-lg-12">
                <div data-bind="text: group.name" style="text-transform: uppercase;"></div>
                <hr style="margin-top:5px;"/>
            </div>
        </div>          
        <div class="row bk-category-list" data-bind="foreach: categories">                
            <div class="col-md-6">
                <div class="clearfix" style="margin-bottom:10px;"></div>	
                <div class="media" style="margin-bottom: 15px;">
                    <span class="pull-left" style="background: #777777;">
                        <img class="media-object" width="70" height="70" data-bind="attr: { src: imageUrl, title: name }"/>
                    </span> 
                    <div class="media-body">                                
                        <a href="#" data-bind="click: $root.categoryItemClick" >
                            <h3 class="media-heading" style="text-transform: uppercase;" data-bind="text: name"></h3>                  
                        </a>   
                        <h5 style="color: #777777;" data-bind="text: description"></h5>
                    </div>                                      
                </div>
            </div>
            <!--ko if:$index()%2 !=0 -->
            <div class="clearfix" style="margin-bottom:15px;"></div>          
            <!--/ko-->                
        </div> 
    </div>
</script>

<script id="excursion-ranking" type="text/html">
    <div data-bind="with: ranking" class="bk-ranking">
        <!-- ko if: average -->        
        <div class="clearfix">
            <h4 class="page-header" style="color:#777777; margin:0; padding:0;">
                <table style="width:100%;">
                <tr>
                    <td style="vertical-align: baseline;"><span>@ExcursionStrings.ResourceManager.Get("ExcursionReviewTitle")</span></td>
                    <td style="vertical-align: baseline;color:#333333;text-align:right;"><span data-bind="if:title.length > 0" style="text-transform: lowercase;"><span data-bind="text:title"></span>, </span><span data-bind="if:average"><span style="font-weight:bold; font-size:1.8em;" data-bind="text:average"></span></span></td>
                </tr>
                </table>
            </h4>  		
            <div style="margin-top: -3px; color: #cccccc; margin-bottom:10px;">            
                <div><span style="font-size:80%;" data-bind="if:average">@ExcursionStrings.ResourceManager.Get("ExcursionReviewNote1")  <span><span data-bind="text:count"></span> @ExcursionStrings.ResourceManager.Get("ExcursionReviewNote2")</span></span></div>
            </div>
        </div>
        <!-- /ko -->    
                          
        <div class="row" data-bind="foreach: ranks">
            <div class="col-lg-12">
                <div class="bk-ranking-item"><span data-bind="text: name"></span><div class="bk-ranking-item-rank" data-bind="text: rank" style="float:right;"></div></div>               
                <div class="progress">                    
                    <div class="progress-bar progress-bar-success" role="progressbar" data-bind="style: {width: rankPct}"></div>
                </div>
            </div>
        </div>
        @if( GuestService.Settings.IsAddRankingEnabled ) 
        {
        <div class="row">
            <div class="col-lg-12">
                <a href="#" data-bind="click: $root.excursionAddRatingClick">@ExcursionStrings.ResourceManager.Get("AddReviewLink")</a>
            </div>
        </div>
        }
    </div>       

    @if( GuestService.Settings.IsAddRankingEnabled ) 
    {
    <div data-bind="ifnot: ranking" >
        <div class="bk-ranking">
            <div class="clearfix">
                <div class="page-header" style="color:#777777; margin:0; padding:0;">
                    <table style="width:100%;">
                    <tr>
                        <td style="vertical-align: baseline;"><h4>@ExcursionStrings.ResourceManager.Get("ReviewNoRanking")</h4></td>
                        <td style="vertical-align: baseline;text-align:right;">
                            <a href="#" data-bind="click: $root.excursionAddRatingClick">@ExcursionStrings.ResourceManager.Get("AddReviewLink")</a>
                        </td>
                    </tr>
                    </table>
                </div>             
            </div>
        </div>
    </div>
    }
</script>

<script id="excursion-survey" type="text/html">   
    <div class="row" data-bind="if: description().surveynotesView">        
        <div class="col-md-12">                
            <h3 style="text-transform: uppercase; margin-top:0; float:left;">@ExcursionStrings.ResourceManager.Get("ReviewTitle")</h3>
        </div>
            <div class="clearfix"></div>           
        <!--ko foreach: description().surveynotesView -->                    
            <div class="col-md-2" style="margin-bottom:5px;">
                <div style="font-weight:bold;">
                    <span data-bind="text: guestnameprefix"></span> <span data-bind="text: guestname"></span>
                </div>
                <small style="color:#777777;" data-bind="text: completedate"></small>                   
            </div>            
            <div class="col-md-10" style="text-align:justify;">  
                <div class="media">
                    <span class="pull-left" href="#">                          
                        <img class="media-object" src="@Url.Content("~/images/finger_up.png")" alt="@ExcursionStrings.ResourceManager.Get("ReviewHintPositive")" style="width:24px;height:24px;">
                    </span>
                    <div data-bind="text: positivenote" class="media-body"></div>
                </div>                   
                <div class="media">
                    <span class="pull-left" href="#">                          
                        <img class="media-object" src="@Url.Content("~/images/finger_down.png")" alt="@ExcursionStrings.ResourceManager.Get("ReviewHintNegative")" style="width:24px;height:24px;">
                    </span>
                    <div data-bind="text: negativenote" class="media-body"></div>
                </div>                                       
            </div>            
            <div class="clearfix"></div>                                                                                                     
            <div class="col-lg-12">                            
                <hr style="border-style: dashed none none; border-width: 1px 0 0; margin-bottom: 35px;  margin-top: 15px;" />   
            </div>                                          
        <!-- /ko -->


        <div class="col-md-12" data-bind="if: description().surveynotesMoreButton">        
            <a style="float:right;" href="#" data-bind="click: $root.surveyMoreReviewClick">
                Показать больше отзывов
            </a>
        </div>
    </div>
</script>
<style>
.ex_ugol {
width: 0;
  height: 0;
  border-bottom: 40px solid #fff;
  border-left: 40px solid transparent;
  position: absolute;
  right: 0px;
  bottom: 0px;
  z-index: 2;
}


</style>





<script id="excursion-description" type="text/html">
<div data-bind="attr: {id: 'excursion_'+excId }" class="ex_block" style="width: -moz-available;">

<a href="#" data-bind="click: $root.excursionItemClick" style="color: #333; font-weight:bold;">
	<div class="media-heading" style="text-transform: uppercase;font-weight: initial;padding: 3px;margin: 0px;margin-bottom: -15px; text-align: left; white-space: nowrap; overflow: hidden;"  data-bind="text: excursion.name, event: { mouseover: $root.excursionItemShowText, mouseout: $root.closeExText }"></div>
</a>
  <!-- <a href="#" data-bind="click: $root.excursionItemShowText" style="color: #333; font-weight:bold;" >txt </a>  
 <a href="#" data-bind="event: { mouseover: $root.excursionItemShowText }" style="color: #333; font-weight:bold;" > txt2</a> --> 
<br>
<div style="position: relative;" data-bind="attr: {id: 'ex_discript_shadow'+excId}">
<div class="ex_ugol" style=""></div>
<img class="img-responsive" style=" background:#cccccc; margin-bottom: 5px;"  data-bind="attr: { src: imageUrl, title: name, id: 'avatar_ex_'+excId }"/> 
<div class="text_discript" style="height: 152px; overflow: hidden;  display: none; margin-bottom: 5px; width: 310px; background-color: #ffbc23; color: #000;  padding:	5px; text-align: left; position: relative; z-index: -1;" data-bind="attr: {id: 'ex_discript_'+excId}"> 

 </div>
 </div>
<br>
<table style="width: 100%;">
<tr>
<td style="width: 33%;">
<div class="ex_price" data-bind="template: 'excursion-price-box'" style="
    margin-left: 0px;
    margin-top: -20px;
    background-color: #ffbc23;
    padding-left: 0px;
	padding-right: 0px;
	text-align: center;
"></div>
</td>
<td style="width: 33%;">
 <div data-bind="with: ranking" class="" style="
    margin-left: 0px;
    margin-top: -20px;
    padding-left: 0px;
	padding-right: 0px;
">
            <div style="text-align:right; padding: 0; color: #777;">
                <div style="font-weight:bold; text-transform: lowercase;"><span data-bind="ifnot:title.length > 0">@ExcursionStrings.ResourceManager.Get("ExcursionReviewCountTitle") </span><span data-bind="if:title.length > 0"><span data-bind="text:title"></span>, </span><span data-bind="if:average"> <span data-bind="text:average"></span></span></div>
                
            </div>
        </div>  
		</td>
		<td>
<div class="" style="
    margin-left: 0px;
    margin-top: -23px;
text-align: center;
    padding-left: 0px;
	padding-right: 0px;
">

<div data-bind="if: excursion.duration" style="padding: 5px 0 0;" class="bk-excursion-item-duration" >                                                                                        
                    <div class="clearfix" style="margin-bottom:0px;"></div>	
                    <span class="" style="">
                        <img class="" style="vertical-align: none;" src="@Url.Content("~/images/new/time.png")" alt="@ExcursionStrings.ResourceManager.Get("DurationAlt")" />
                    </span>&nbsp;<span style="color: #cccccc;" data-bind="text: DurationToString(excursion.duration)"></span>
                </div>  

</div>
		</td>
		</tr>
		</table>

</div>
<!--
    <div class="col-sm-3">    
        <div style="position:relative;">
            <div data-bind="with: ranking" class="visible-xs" style=" position:absolute; width:100%;">
                <div style="text-align:right; float:right; background: rgba(0, 0, 0, 0.6); margin:3px; padding: 10px 15px; color:#ffffff;">
                    <div style="font-weight:bold;"><span data-bind="ifnot:title.length > 0">@ExcursionStrings.ResourceManager.Get("ExcursionReviewCountTitle") </span><span data-bind="if:title.length > 0"><span data-bind="text:title"></span>, </span><span data-bind="if:average"><span data-bind="text:average"></span></span></div>
                    <div><span style="font-size:80%;" data-bind="if:average">@ExcursionStrings.ResourceManager.Get("ExcursionReviewNote1")  <span><span data-bind="text:count"></span> @ExcursionStrings.ResourceManager.Get("ExcursionReviewNote2")</span></span></div>
                </div>
            </div>  
            <a href="#" data-bind="click: $root.excursionItemClick">
                <img class="img-responsive" style="background:#cccccc; margin-bottom: 5px;"  data-bind="attr: { src: mainImageUrl, title: name }"/>                                   
            </a>                               
        </div>                          
                       
        <div data-bind="with: ranking" class="hidden-xs">
            <div style="text-align:right; padding: 0; color: #777;">
                <div style="font-weight:bold; text-transform: lowercase;"><span data-bind="ifnot:title.length > 0">@ExcursionStrings.ResourceManager.Get("ExcursionReviewCountTitle") </span><span data-bind="if:title.length > 0"><span data-bind="text:title"></span>, </span><span data-bind="if:average"> <span data-bind="text:average"></span></span></div>
                <div style="margin:0; padding:0; line-height:14px;"><span style="font-size:80%;" data-bind="if:average">@ExcursionStrings.ResourceManager.Get("ExcursionReviewNote1") <span><span data-bind="text:count"></span> @ExcursionStrings.ResourceManager.Get("ExcursionReviewNote2")</span></span></div>
            </div>
        </div>                        
    </div>
@*                    <div class="col-sm-3 visible-xs">                              
        <a href="#" data-bind="click: $root.excursionItemClick">
            <img class="img-responsive" style="background:#cccccc; margin-bottom: 5px;" data-bind="attr: { src: mainImageUrl, title: name }"/>                               
        </a>
    </div>*@
    <div class="col-sm-9 bk-excursion-item">
        <div class="row">
            <div class="col-sm-7 col-md-8" style="min-height:95px;">                           
                <div class="col-xs-5 pull-right visible-xs" data-bind="template: 'excursion-price-box'"> </div>                                                                         
                <a href="#" data-bind="click: $root.excursionItemClick" style="color: #333; font-weight:bold;">
                    <h3 class="media-heading" style="font-weight:bold;"  data-bind="text: excursion.name"></h3>
                </a> 
                <div data-bind="if: excursion.categories" class="bk-excursion-item-category">
                    <div style="margin-bottom:5px;">
                        <ul class="list-inline samo_categories" data-bind="foreach: excursion.categories">
                            <li>
                                <span data-bind="text: name"></span> 
                            </li>
                        </ul>
                    </div>
                </div>
                <div data-bind="if: excursion.destinations" class="bk-excursion-item-destination"> 
                    <ul data-bind="foreach: excursion.destinations" class="csv">                                               
                    
					
					 
					
					
                        <li class="pull-left" style="color: #333333; font-weight:bold; text-transform:uppercase;" data-bind="text: name"></li>
                    </ul>
                </div>                                
                <div data-bind="if: excursion.languages" class="bk-excursion-item-language">
                    <div class="clearfix" style="margin-bottom:0px;"></div>	
                    <div data-bind="foreach: excursion.languages">
                        <span class="pull-left">
                            <img data-bind="attr: { src: languageImageUrl, title: name }" alt="@ExcursionStrings.ResourceManager.Get("ExcursionLanguage")" />&nbsp;
                        </span>
                    </div>                                                
                </div>
                <div data-bind="if: excursion.departures" class="bk-excursion-item-departure"> 
                    <div class="clearfix" style="margin-bottom:0px;"></div>                                                
                    <span class="pull-left" style="color: #777777;">
                        <div style="font-size:12px; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DepartureLabel")</div>
                        <div data-bind="foreach: excursion.departures">                                                                                                                
                                <span data-bind="text: name"></span>&nbsp;                                                                                                                                                                                
                        </div>              
                    </span>
                </div>                                                                           
            </div>
            <div class="col-sm-5 col-md-4  hidden-xs bk-excursion-item-price" data-bind="template: 'excursion-price-box'"></div>
        </div>
        <div class="row">
            <div class="col-sm-8 ">
                <div data-bind="if: excursion.duration" style="padding: 5px 0 0;" class="bk-excursion-item-duration" >                                                                                        
                    <div class="clearfix" style="margin-bottom:0px;"></div>	
                    <span class="pull-left" style="background: #cccccc;">
                        <img class="media-object" src="@Url.Content("~/images/duration.png")" alt="@ExcursionStrings.ResourceManager.Get("DurationAlt")" />
                    </span>&nbsp;<span style="color: #cccccc;" data-bind="text: DurationToString(excursion.duration)"></span>
                </div>                                    
                <div data-bind="if: excursion.excursionPartner" style="padding: 5px 0 0;" class="bk-excursion-item-partner" >                                                                                        
                    <span class="pull-left" style="background: #cccccc;">
                        <img class="media-object" src="@Url.Content("~/images/partner.png")" alt="@ExcursionStrings.ResourceManager.Get("PartnerAlt")" />
                    </span>&nbsp;<span style="color: #cccccc;" data-bind="text: excursion.excursionPartner.name"></span>
                </div> 
            </div>   
            <div class="clearfix visible-xs" style="margin-bottom:5px;"></div>   
        </div>                                                                                                                                                       
    </div>                          
    <div class="clearfix"></div>                                                                                                     
    <div class="col-lg-12">                            
        <hr style="border-style: dashed none none; border-width: 1px 0 0; margin-bottom: 35px;  margin-top: 15px;" />   
    </div> 
	
	-->
</script>
<style>
        body {
            background-image: url(@Url.Content("~/images/new/@content.ImageName"));
            background -size: 100% 100%;
            background-attachment: fixed;
        }
</style>

<div class="container" style="" id="excursion_container">    
   <div class="row bk-main">            
        <div class="col-lg-12">              
          <h1 id="ex_title" class="page-header" style="
    border: none;
    text-align: center;
    color: #fff;
">@ViewBag.Title</h1>
          @if (GuestService.Settings.IsShowBreadCrumb)
        {
          <ol class="breadcrumb" style="display: none;">   
            @if (GuestService.Settings.ServiceHomeUrl == null)
        {
                <li><a href="@Url.Action("index", "welcome")">@ExcursionStrings.ResourceManager.Get("GuestServiceTitle")</a></li>
            }
            else
            {       
                <li><a href="@GuestService.Settings.ServiceHomeUrl">@ExcursionStrings.ResourceManager.Get("GuestServiceTitle")</a></li>
            }
            <li class="active">@ViewBag.Title</li>
          </ol>
          }
        </div>             
        <div class="col-lg-12 form-inline" id="search_box" style="
    background-color: #fff;
    padding: 5px;
    border-radius: 5px;
    text-align: center;
    box-shadow: 0 4px 4px rgba(0,0,0,0.5);
width: 60%;
  position: relative;
  left: 50%;
  margin-left: -30%;
  height: 44px;
">                        
			<div class="form-group  col-md-6 col-sm-3" style="padding-left:0px; padding-right:5px; float: left;">					
				<input  type="text" placeholder="@ExcursionStrings.ResourceManager.Get("SearchPlaceholder")" class="form-control" data-bind="value: searchTextInput, valueUpdate: 'afterkeydown'" style="
    border: none;
    box-shadow: none;
">
			</div>
			<button class="btn btn-primary" type="button" value="" data-bind="click: $root.catalogButtonClick" style="display: none;">@ExcursionStrings.ResourceManager.Get("NavigateExcursions")</button>	 

            @if (!GuestService.Settings.IsHideDeparturePoints)
{
            <div class="form-group  col-md-2 col-sm-3" style="padding-left:0px; padding-right:5px; float: right;" >					
                <select id="departure_point" data-bind="options: searchDeparturePoints, optionsText: 'name', value: $root.searchDeparturePoint, event: { change: searchDeparturePointChanged }" class="form-control" style="padding: 6px; width:100%; border: none;
    box-shadow: none;">
                </select>                                                                             
			</div>									
            }
			<button class="btn btn-primary" type="button" value="" data-bind="click: $root.categoryButtonClick" style="display:none;">@ExcursionStrings.ResourceManager.Get("NavigateCategory")</button>				  
        </div>
    </div>  
            
    <div class="bk-category" data-bind="if: viewVisibilityCategorygroups" >
	<!--
        <h4 style="color:#777777;">@ExcursionStrings.ResourceManager.Get("SearchTitle")</h4>

        <div></div>

        <div class="row" data-bind="if: destinationstates && destinationstates().length > 1"> 
            <div class="col-lg-12" data-bind="template: 'excursion-destination-geography'"></div>
        </div>

        <div data-bind="template: 'excursion-categorygroups'"></div>
		-->
    </div> <!-- /visibility category -->   
      
    <div data-bind="if: viewVisibilityGeographies" >
        <div class="row bk-geography" data-bind="if: geographies().length > 0">
	        <div class="col-lg-12">
                <br />
                <h2 class="page-header" style="color:#777777;">@ExcursionStrings.ResourceManager.Get("GeorgaphyTitle")</h2>
            </div>				
            <div class="col-lg-12">
                <div class="media" style="margin-bottom: 15px;">
                      <span class="pull-left" style="background: #cccccc;">
                            <img class="media-object" src="@Url.Content("~/images/geography.png")" alt="@ExcursionStrings.ResourceManager.Get("GeorgaphyTitle")" />
                        </span>     
                        <div class="media-body">                                
                            <div class="row bk-geography-list" data-bind="foreach: geographies">
                                <div class="col-sm-6 col-lg-4">
                                    <a href="#" data-bind="click: $root.geographyItemClick">
                                        <h3 class="media-heading" style="text-transform: uppercase; margin:0;" data-bind="text: name"></h3>
                                    </a>                          
                                    <h5 style="margin:0;"><small data-bind="text:geotype" style="color:#cccccc; text-transform: lowercase; line-height:.85;"></small></h5>
                                </div>   
                            </div>
                        </div>                                      
                </div>              
            </div>
        </div>        
    </div> <!-- /visibility geography -->

    <div data-bind="if: viewVisibilityExcursions" style="background-color: #fff; padding: 50px; top: 2000px; width: 100%; min-height: 100%; position: absolute; left: 0px; background-image: url(@Url.Content("~/images/new/bg_option2.png")); background-size: 100%; background-position: top center; background-repeat: no-repeat; z-index: 2;" id="ex_cont">   

<div style="width: 100%; background-image: url(@Url.Content("~/images/new/logos_footer.png")); background-size: 100%; background-position: top center;">

</div>

         
                <div style="top: 0px;left: 0px;width: 100%;position: absolute;text-align: center; background-image: url(@Url.Content("~/images/new/bg_option.png")); background-size: 100%; background-position: top center; background-repeat: no-repeat; height: 97px;" id="menu_option" class="menu_option">
				<center>
                    <div class="col-lg-1212" data-bind="template: 'excursion-filter-categorygroup'"></div>
                    <div class="col-lg-1212" data-bind="template: 'excursion-filter-destination'"></div>
                    <div class="col-lg-1212" data-bind="template: 'excursion-filter-departure'"></div>      
                    <div class="col-lg-1212" data-bind="template: 'excursion-filter-language'"></div>
                    <div class="col-lg-1212" data-bind="template: 'excursion-filter-date'"></div>
					</center>
                </div>
				
          

	
        <div class="row container" style="display: none;">
             <div class="col-lg-3 visible-md visible-sm visible-xs col-lg-push-9">                                   
                <a href="#" onclick="javascript: return show_hide();" id="showFilters" style="outline:0;outline:none;"><h5>@ExcursionStrings.ResourceManager.Get("ExtraFilters")&nbsp;<b class="caret"></b></h5></a>  
                <div class="row bk-s-filters" style="display:none;">                 
                    <div class="col-sm-4 col-lg-12" data-bind="template: 'excursion-filter-categorygroup'"></div>
                    <div class="col-sm-4 col-lg-12">
                        <div data-bind="template: 'excursion-filter-destination'"></div>
                        <div data-bind="template: 'excursion-filter-departure'"></div>
                    </div>
                    <div class="col-sm-4 col-lg-12">
                        <div data-bind="template: 'excursion-filter-language'"></div>
                        <div data-bind="template: 'excursion-filter-date'"></div>
                    </div>
                </div>             
            </div>	
        </div>
        <div class="row bk-excursion-bar" >
            <div class="col-lg-12">
                <div class="form-inline">                
                    <div class="form-group">
                        <h2 style="color:#777777;"><span data-bind="with: filterDestinationState"><span data-bind="text: name"></span>.&nbsp;</span>@ExcursionStrings.ResourceManager.Get("ExcursionTitle")</h2>
                    </div>
                    <div class="form-group">
                        <div class="collapse navbar-collapse bs-js-navbar-collapse" style="padding-left:0;">
                          <ul class="nav navbar-nav">
                            <li class="dropdown">
                              <a  id="excursionsortorder" name="excursionsortorder" data-toggle="dropdown" class="dropdown-toggle" role="button" href="#" id="drop1" style="padding-bottom:0px;padding-top:20px;color: #777777; font-size:17px;">
                                <span data-bind="text: excursionSortOrder().text"></span>&nbsp;<b class="caret" style="border-top-color: #777777; border-bottom-color: #777777;"></b>
                              </a>
                              <ul role="menu" class="dropdown-menu" data-bind="foreach: excursionSortOrders">
                                <li><a href="#" data-bind="text: text, click: $root.setExcursionSortOrder" style="color: #777777; font-size:17px;" tabindex="-1" role="menuitem"></a></li>                
                              </ul>
                            </li>            
                          </ul>        
                        </div>
                    </div>
               </div>
            </div>            
           
            <div class="col-lg-12">                            
                <hr style="margin-top:0;"/>
            </div>
        </div> <!-- /excursion title -->

        <div class="row bk-excursion">         
          
			<div class="col-lg-3 visible-lg col-lg-push-9" style="display: none !important;">         
                
				<div class="row bk-l-filters">
                    <div class="col-lg-12" data-bind="template: 'excursion-filter-categorygroup'"></div>
                    <div class="col-lg-12" data-bind="template: 'excursion-filter-destination'"></div>
                    <div class="col-lg-12" data-bind="template: 'excursion-filter-departure'"></div>      
                    <div class="col-lg-12" data-bind="template: 'excursion-filter-language'"></div>
                    <div class="col-lg-12" data-bind="template: 'excursion-filter-date'"></div>
                </div>
				
            </div>
			
            		                 
            <div class="col-lg-9 col-lg-pull-3 bk-excursion-not-found" style="display: none;" data-bind="visible: searchFlag() == false && excursions().length == 0">
                <h3 style="color:#8c8c8c;">@ExcursionStrings.ResourceManager.Get("ExcursionNotFound")</h3>
            </div>
            <div class="col-lg-9 col-lg-pull-3">  
			<div class="container">
			<center>
                <div class="row bk-excursion-list" data-bind="foreach: excursions, style: {minHeight: windowHeight}">

                    <div data-bind="template: 'excursion-description'" class="box_ex"></div>
                </div>  <!-- /each excursions -->                      
                <div id="exlistbottompanel" name="exlistbottompanel">&nbsp;</div> 
</center>				
            </div> 
</div>			
        </div>  
    </div> <!-- /excursion -->   
    
    <div data-bind="if: viewVisibilityDescription">   

<script>
$("#ex_cont").ready(function(){

})


</script>



    
        <div class="row bk-description" style="
    margin-top: 150px;
">           
            <div data-bind="if: description()">
			
			
             <!-- вывод заголовка -->


			
			
                <div class="" style="
    text-align: center;
    font-size: 30px;
    color: #fff;
	z-index: 3;
    position: relative;
    top: -150px;
">
                    <span  data-bind="text:description().excursion.name"></span>
					<h4  data-bind="text:description().text"></h4>
					
                </div>	


				
				
				
				<div  data-bind="with: description()" style="z-index: 3;position: relative;top: -140px;text-align: center;font-size: 21px;padding: 0 25% 0 25%;">  
                  
 
                    
					
                    <div data-bind="if: excursion.departures" class="bk-excursion-item-departure">                                                                  
                        <div style="color: #ffbc23;margin-bottom: 5px;">

                            <div data-bind="foreach: excursion.departures">                                                                                                                
                                    <span data-bind="text: name"></span>&nbsp;                                                                                                                                                                                
                            </div>              
                        </div>
                    </div>
				</div>
				
				
				
				
				
				
				

				
                    			
              <!--   <div class="col-lg-12">                            
                    <hr style="margin-top:0;"/>
                </div>
                -->
                <!-- ko if: description().pictures && description().pictures.length == 1 -->
                <div class="col-lg-8 bk-description-image" style=" padding-right:0;position: absolute;top: 0px; z-index: 1;width: 100%; padding-left: 0px; right: 0px;">                   
                     <!-- ko foreach: description().pictures -->
  					 <img data-bind="attr: {src: largeImageUrl }" class="img-responsive" style="height: auto;width: 100%;"> 
                     <!-- /ko -->
                </div>
                <!-- /ko -->  
                <!-- ko if: description().pictures && description().pictures.length > 1 -->
					<script>
					function fullscreenslider() {
					$('#ex_slider').css({ "position": "fixed", "top": "50%", "margin-top": "-200px", "z-index":"8"});
					$('.fill').css({ "background-size": "100% 100%", "position": "fixed"});
					$("#but_full_slider").hide();
					$("#but_close_slider").show();
}
function fullscreenslider_close() {
					$('.fill').css({ "background-size": "cover", "position": "static"});
					$('#ex_slider').css({ "z-index":"1", "position": "absolute", "top": "0px", "margin-top": "0px"});
					$("#but_full_slider").show();
					$("#but_close_slider").hide();
}
					</script>	
<div style="display: none; position: fixed; top: 0px; left: 0px; width: 100%; height: 100%; background-color: #000; z-index: 7;" id="ex_slider_back"></div>					
                <div class="col-lg-8 bk-description-images" style="padding-right:0;position: absolute;top: 0px;width: 100%; z-index: 1;right: 0px;padding-left: 0px; margin-top: 0px; " id="ex_slider">                                       
  					<div id="myCarousel" class="carousel slide">  

<div id="but_full_slider" style="position: relative; z-index: 26; color: red; top: 245px; left: 95%; cursor: pointer; display: block;" OnClick="fullscreenslider();">
<img src="@Url.Content("~/images/new/open_full.png")">
</div>	

<div id="but_close_slider" style="
 display: none;
    position: relative;
    z-index: 26;
    color: red;
    top: 100%;
    left: 95%;
    cursor: pointer;

" OnClick="fullscreenslider_close();">
<img src="@Url.Content("~/images/new/close_full.png")">
</div>					
                        <ol class="carousel-indicators" data-bind="foreach: description().pictures">                            
                            <li data-target="#myCarousel" data-bind="css: {active: index == 0 }, attr: {'data-slide-to': index}"></li>                     
                        </ol>                               
                        <div class="carousel-inner" data-bind="foreach: description().pictures">                         
                          <div data-bind="css: {active: index == 0 }" class="item">
                            <div class="fill" data-bind="style: { backgroundImage: 'url(\'' + largeImageUrl + '\')' }"></div>                            
                            <div class="carousel-caption">
                              <h4 data-bind="text:description"></h4>
                            </div>
                          </div>                        
                        </div>                    
                        <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                          <span class="icon-prev" style="margin-left: -50px; color: #ffbc23;font-size: 70px;"</span>
                        </a>
                        <a class="right carousel-control" href="#myCarousel" data-slide="next">
                          <span class="icon-next" style="margin-right: -40px; color: #ffbc23;font-size: 70px;"></span>
                        </a>
                    </div>                                                   
                   
                </div>                 
              
                <!-- /ko -->
                
                <!-- ko ifnot: description().pictures && description().pictures.length > 0 -->
                <div class="col-lg-8" style="padding-right:0;">     
                    <div style="width:100%; height:400px; background-color:#cccccc;"></div>
                </div>
                <!-- /ko -->
                <div class="col-lg-4 col-sm-12 pull-right-lg" data-bind="with: description()" style="z-index: 3;">  
                    @* RIGHT SIDE *@
 
                    <h4 class="page-header" style="color:#777777; margin-top:0; margin-bottom:5px;">Информация</h4>
                    <div data-bind="if: excursion.destinations"  class="bk-excursion-item-destination">                            
                        <div style="color: #777777;margin-bottom: 5px;">
                            <div style="font-size:12px; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DescriptionInfo_Direction")</div>
                            <ul data-bind="foreach: excursion.destinations" class="csv">                                               
                            <!-- css content after -->
                                <li style="color: #333333; text-transform:uppercase;" data-bind="text: name"></li>
                            </ul>
                        </div>
                    </div>                       
                    <div data-bind="if: excursion.languages" class="bk-excursion-item-language">                           
                        <div style="color: #777777;margin-bottom: 5px;">
                            <div style="font-size:12px; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DescriptionInfo_Language")</div>
                            <div data-bind="foreach: excursion.languages">
                                <span>
                                    <img data-bind="attr: { src: languageImageUrl, title: name }" alt="@ExcursionStrings.ResourceManager.Get("ExcursionLanguage")" />&nbsp;
                                </span>
                            </div>                                                
                        </div>
                    </div>
					
                    <div style="display: none;" data-bind="if: excursion.departures" class="bk-excursion-item-departure">                                                                  
                        <div style="color: #777777;margin-bottom: 5px;">
                            <div style="font-size:12px; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DepartureLabel")</div>
                            <div data-bind="foreach: excursion.departures">                                                                                                                
                                    <span data-bind="text: name"></span>&nbsp;                                                                                                                                                                                
                            </div>              
                        </div>
                    </div>
                    <div data-bind="if: excursion.duration" style="padding: 5px 0 0; " class="bk-excursion-item-duration" >       
                        <div style="color: #777777;margin-bottom: 5px;">
                            <div style="font-size:12px; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DescriptionInfo_Duration")</div>
                            <span class="pull-left" style="background: #cccccc;">
                                <img class="media-object" src="@Url.Content("~/images/duration.png")" alt="@ExcursionStrings.ResourceManager.Get("DurationAlt")" />
                            </span>&nbsp;<span data-bind="text: DurationToString(excursion.duration)"></span>
                        </div>
                    </div>     
                                 
                    <!-- excursion categories --> 
                    <div class="bk-description-categorygroup" data-bind="if: categorygroups && categorygroups.length>0" >                                 
                        <div class="clearfix"></div> 
                        <hr style="margin:5px 0 5px 0; padding:0;"/>
                        <div style="font-size:12px; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DescriptionInfo_Categories")</div>
                        <div data-bind="foreach: categorygroups">
                            <div data-bind="text: name, style: { marginLeft: name != null ? '20px' : '' }" style="color:#777777; font-weight:bold; text-transform: uppercase;"></div>
                            <div data-bind="foreach: items">
                                <div class="checkbox" style="padding-left: 0px; margin-bottom: 7px;">
                                    <span class="samo_checked" status="true"><label style="float:left; margin-top:0px; cursor: default;"></label></span>   
                                    <label style="cursor:text" data-bind="text: name"></label>                                                    
                                </div>
                            </div>
                        </div>
                    </div>     
                               
                    <div data-bind="if: excursion.excursionPartner" style="padding: 5px 0 0;" class="bk-excursion-item-partner" >                           
                        <hr style="margin:5px 0 5px 0; padding:0;"/>
                        <div style="color: #777777;margin-bottom: 5px;">
                            <div style="font-size:12px; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DescriptionInfo_Partner")</div>                                                                                        
                            <span class="pull-left" style="background: #cccccc;">
                                <img class="media-object" src="@Url.Content("~/images/partner.png")" alt="@ExcursionStrings.ResourceManager.Get("PartnerAlt")" />
                            </span>&nbsp;<span data-bind="text: excursion.excursionPartner.name"></span>                                
                        </div>
                    </div>                                                                           
                   
                    <div class="visible-lg" >
                        <button class="btn btn-primary" style="margin-top: 10px;" type="button" data-bind="click: $root.navigateToPriceListClick">@ExcursionStrings.ResourceManager.Get("BookButton")</button>
                    </div>                                            
                        
                    <div data-bind="template: 'excursion-ranking'"></div>

                </div>
              
                <div style="z-index: 3;" class="col-lg-8 col-xs-12"  data-bind="if: description().description && description().description.length>0">               
                    <div class="clearfix " style="margin-top:15px;"></div> 
                    <div data-bind="foreach: description().description" class="bk-description-block">                      
                        <h3 style="text-transform: uppercase; margin-top:0;" data-bind="text: title"></h3>     
                        <div data-bind="if: paragraphs" style="color: #777777;" class="bk-description-text">
                            <div data-bind="text: paragraphs"></div>              
                        </div>
                        <div data-bind="foreach: sections">                
                            <div class="col-md-12" style="padding-left:0;">
                                <div class="clearfix" style="margin-bottom:10px;"></div>	
                                <h4 data-bind="text: title" style="text-transform: uppercase;"></h4>                    
                                <div class="media bk-description-sectiontext" style="margin-bottom: 15px; color: #777777;" data-bind="text: paragraphs"></div>
                            </div>
                            <!--ko if:$index()%2 !=0 -->
                            <div class="clearfix" style="margin-bottom:15px;"></div>          
                            <!--/ko-->                
                        </div> 
                    </div>                       
                </div> <!-- if description --> 

                <!--ko if:cartinfoBookingView() == false -->
                <div class="col-lg-8 col-xs-12" id="excursionPrices" data-bind="if: prices()"  style="padding-right:0; z-index: 3;">
                    <div class="clearfix" style="margin-top:15px;"></div> 
                    <h3 style="text-transform: uppercase; margin-top:0;">@ExcursionStrings.ResourceManager.Get("DetailPriceTitle")</h3>     
                    <h4 style="color:#777777;">@ExcursionStrings.ResourceManager.Get("DetailDateTitle")</h4>  
                    <div id="excursionpricedate" name="excursionpricedate"></div>    
                    <h4><span style="color:#777777;">@ExcursionStrings.ResourceManager.Get("DetailSelectedDateTitle")&nbsp;<span style="color:#777777;" data-bind="sm.text.date: $root.excursionpricedate"></span></span></h4>
                    <div data-bind="if: !pricesNotFound()">
                        <table class="table table-striped">
                            <thead>
                                <tr>                                                                    
                                    <th style="text-transform: uppercase;">@ExcursionStrings.ResourceManager.Get("DetailDescription")</th>  
                                    <!--ko if:$root.priceColumns().departure -->   
                                        <th style="text-transform: uppercase;">@ExcursionStrings.ResourceManager.Get("DetailDeparture")</th>                                  
                                    <!--/ko-->                                                      
                                    <!--ko if:$root.priceColumns().closesaletime -->   
                                        <th style="text-transform: uppercase;">@ExcursionStrings.ResourceManager.Get("DetailOnsaleTill")</th>
                                    <!--/ko-->
                                    <!--ko if:$root.priceColumns().group -->   
                                        <th style="text-transform: uppercase;">@ExcursionStrings.ResourceManager.Get("DetailPrice")</th>
                                    <!--/ko-->
                                    <th></th>         
                                </tr>
                            </thead>
                            <tbody>
                                <!--ko foreach:prices() -->
                                <tr>                      
                                <td style="vertical-align:middle;">                            
                                    <!--ko if:$root.priceColumns().language --><span data-bind="if:language"><span data-bind="text:language.name"></span>,</span><!--/ko-->
                                    <!--ko if:$root.priceColumns().extime --><span data-bind="if:time"><span data-bind="text:time.name"></span>,</span><!--/ko-->                            
                                    <!--ko if:$root.priceColumns().group --><span data-bind="if:group"><span data-bind="text:group.name"></span></span><!--/ko-->                              
                                </td>     
                                <!--ko if:$root.priceColumns().departure -->
                                <td style="vertical-align:middle;"> 
                                    <span data-bind="if:departures">
                                        <ul data-bind="foreach: departures" class="csv"> 
                                            <!-- css content after -->
                                            <li class="pull-left" data-bind="text: name"></li>
                                        </ul>
                                    </span>                            
                                    <span data-bind="ifnot:departures">-</span>
                                </td> 
                                <!--/ko-->
                                               
                                <!--ko if:$root.priceColumns().closesaletime --> 
                                <td style="vertical-align:middle;">                                                  
                                    <div data-bind="if:closesaletime ">
                                        <span data-bind="sm.text.datetime: closesaletime"></span>                                
                                    </div>           
                                </td>  
                                <!--/ko-->   
                                              
                                <td style="vertical-align:middle;">                                                  
                                    <div data-bind="if:price">
                                        <div data-bind="if:price.service"><span data-bind="text:price.service"></span> <span data-bind="if:price.currency"><span data-bind="text:price.currency"></span></span></div>
                                        <div data-bind="if:price.adult" style="color:#777777;">@ExcursionStrings.ResourceManager.Get("DetailAdult")&nbsp;<span data-bind="text:price.adult" style="color:#333333;"></span> <span data-bind="if:price.currency"><span data-bind="text:price.currency"></span></span></div>
                                        <div data-bind="if:price.child" style="color:#777777;">@ExcursionStrings.ResourceManager.Get("DetailChild")&nbsp;<span data-bind="text:price.child" style="color:#333333;"></span> <span data-bind="if:price.currency"><span data-bind="text:price.currency"></span></span></div>
                                        <div data-bind="if:price.infant" style="color:#777777;">@ExcursionStrings.ResourceManager.Get("DetailInfant")&nbsp;<span data-bind="text:price.infant" style="color:#333333;"></span> <span data-bind="if:price.currency"><span data-bind="text:price.currency"></span></span></div>
                                        <div data-bind="if:price.priceType == 1" style="color:#777;">@ExcursionStrings.ResourceManager.Get("DetailServicePrice")</div>                                                
                                        <div style="color:#777777;" data-bind="if:(price.minGroup > 1 || price.maxGroup < 999)" >
                                            @ExcursionStrings.ResourceManager.Get("DeatilGroupSize")&nbsp;<span style="color:#333333;"><span data-bind="text:price.minGroup"></span> - <span data-bind="text:price.maxGroup"></span></span>        
                                        </div>
                                    </div>
                                </td>                                                        
                                <td style="vertical-align:middle;" class="bk-description-book-button">
                                    <div><a href="#" data-bind="click: $root.excursionPriceItemClick">@ExcursionStrings.ResourceManager.Get("BookButton")</a></div>
                                    <div style="color:#777777;" data-bind="if:freeseats"><span data-bind="text:freeseats"></span> @ExcursionStrings.ResourceManager.Get("FreeSeatsLabel")</div>
                                </td>
                                </tr>
                                <!--/ko-->    
                            </tbody>
                        </table>   
                    </div>
                    <div data-bind="if: pricesNotFound()" class="bk-description-price-not-found">
                        <h3 style="color:#8c8c8c;">@ExcursionStrings.ResourceManager.Get("PriceNotFound")</h3>                
                    </div>                                                                             
                </div>            
                <div class="col-lg-8 col-xs-12 pull-left bk-description-map"  style="padding-right:0;" 
                    data-bind="style: { display: cartinfoMapView() ? 'block' : 'none' }">
                    <div class="clearfix" style="margin-top:15px;"></div> 
                    <h3 style="text-transform: uppercase; margin-top:0; float:left;">@ExcursionStrings.ResourceManager.Get("ExcursionRegionTitle")</h3>
                    <a id="maptoggle" href="#" style="float:right;">@ExcursionStrings.ResourceManager.Get("DetailMapExpand")</a>
                    <div id="map" style="height:100px; width:100%;">                    
                    </div> 
                    <div class="pull-right">
                        <img width="10" height="16" src="http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|FFD800" />
                        <span>@ExcursionStrings.ResourceManager.Get("ExcursionMapMarkerDeparture")&nbsp;&nbsp;</span>
                        <img width="10" height="16" src="http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|00CC00" />
                        <span> @ExcursionStrings.ResourceManager.Get("ExcursionMapMarkerLocation")</span>
                    </div> 
                    <div class="clearfix" style="margin-bottom:15px;"></div>                
                    <a href="#" data-bind="click: navigateBackClick">@ExcursionStrings.ResourceManager.Get("DetailReturnToExcursionList")</a>
                    <div class="clearfix" style="margin-bottom:15px;"></div>                   
                </div>           
                <!--/ko-->    

                <!--ko if:cartinfoBookingView() == true -->
                <div class="col-lg-8 col-xs-12" style="padding-right:0; z-index:3;">                                              
                        <div data-bind="with:cartinfoPrice">                                                 
                            <h4><span style="text-transform: uppercase; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DetailExcursionDateTitle")</span>&nbsp;<span data-bind="sm.text.date: date"></span></h4>
                            <h4>                      
                                <span style="text-transform: uppercase; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DetailDescription"):</span>  
                                <!--ko if:language --><span data-bind="text:language.name"></span>,<!--/ko-->
                                <!--ko if:time --><span data-bind="text:time.name"></span>,<!--/ko-->                            
                                <!--ko if:group --><span data-bind="text:group.name"></span><!--/ko-->                                                              
                            </h4>
                            <h4>
                                <!--ko if:departures -->
                                    <span style="float:left; text-transform: uppercase; color:#cccccc;">@ExcursionStrings.ResourceManager.Get("DetailDeparture"):&nbsp;</span> 
                                    <ul data-bind="foreach: departures" class="csv" >                                               
                                        <!-- css content after -->
                                        <li data-bind="text: name"></li>
                                    </ul>
                                <!--/ko-->                    
                            </h4>
                            <!-- <h5 style="color:#777777;"></h5> -->
                            <div class="bs-callout-i bs-callout-info">           
                                <h4 style="margin-bottom:5px;">@ExcursionStrings.ResourceManager.Get("HelpPlease")</h4> 
                                <ul style="list-style-type: none; padding-left: 0px;">
                                    <li><small style="color: #8c8c8c;">@ExcursionStrings.ResourceManager.Get("OrderFormHelp")</small></li>
                                </ul>
                            </div>                           
                            <table class="samo_table" style=""margin-top:0;> 
                                <tr style="color:#cccccc;">
                                    <td style="padding-bottom:0;">
                                    </td>
                                    <td style="padding-bottom:0;">
                                        @ExcursionStrings.ResourceManager.Get("OrderAdult")
                                    </td>
                                    <td style="padding-bottom:0;">
                                        @ExcursionStrings.ResourceManager.Get("OrderChild")
                                    </td >
                                    <td style="padding-bottom:0;">
                                        @ExcursionStrings.ResourceManager.Get("OrderInfant")
                                    </td>
                                </tr>
                                <!--ko ifnot:price.priceType -->
                                <tr >
                                    <td style="color:#cccccc;">
                                        @ExcursionStrings.ResourceManager.Get("OrderPriceForPax")
                                    </td>
                                    <td style="font-weight:bold;">
                                        <span data-bind="text:price.adult"></span>&nbsp;<span data-bind="text:price.currency"></span>
                                    </td>
                                    <td style="font-weight:bold;">
                                        <span data-bind="text:price.child"></span>&nbsp;<span data-bind="text:price.currency"></span>
                                    </td>
                                    <td style="font-weight:bold;">
                                        <span data-bind="text:price.infant"></span>&nbsp;<span data-bind="text:price.currency"></span>
                                    </td>
                                </tr>
                                <!--/ko-->
                                <!--ko if: price.service -->
                                <tr>
                                    <td  style="color:#cccccc;">
                                        @ExcursionStrings.ResourceManager.Get("OrderPriceForService")
                                    </td>
                                    <td colspan="3">
                                        <span data-bind="text:price.service"></span>&nbsp;<span data-bind="text:price.currency"></span>
                                    </td>
                                </tr>
                                <!--/ko-->
                                <tr>
                                    <td style="vertical-align:middle; color:#cccccc;">
                                        @ExcursionStrings.ResourceManager.Get("OrderCount")
                                    </td>
                                    <td >
                                        <select data-bind="options: $root.cartinfoPaxSelectAdult, optionsText: 'name', optionsValue: 'value', value: $root.cartinfoAdult" class="form-control" style="padding: 6px;">
                                        </select>
                                    </td>
                                    <td >
                                        <select data-bind="options: $root.cartinfoPaxSelectChild, optionsText: 'name', optionsValue: 'value', value:$root.cartinfoChild" class="form-control" style="padding: 6px;">
                                        </select>
                                    </td>
                                    <td >
                                        <select data-bind="options: $root.cartinfoPaxSelectInfant, optionsText: 'name', optionsValue: 'value', value:$root.cartinfoInfant" class="form-control" style="padding: 6px;">
                                        </select>
                                    </td>
                                </tr>  
                                
                                @* <tr>
                                    <td colspan="2" style="color:#cccccc;">
                                        @ExcursionStrings.ResourceManager.Get("OrderName")<br />
                                        <input data-bind="value: $root.cartinfoName" class="form-control" maxlength="250" type="text" style="width: 100%;" />
                                    </td>
                                    <td colspan="2" style="color:#cccccc;">
                                        @ExcursionStrings.ResourceManager.Get("OrderPhone")<br />
                                        <input data-bind="value: $root.cartinfoPhone" class="form-control" maxlength="250" type="text" style="width: 100%;" />
                                    </td>
                                </tr> *@

                                <!--ko if: pickuppoints -->
                                <tr>
                                    <td style="vertical-align:middle; color:#cccccc;" colspan="4">
                                        <div style="float:left;">@ExcursionStrings.ResourceManager.Get("OrderPickUp")</div><div style="float:right;">
                                            <a href="#" data-bind="click: $root.cartinfoShowPickUpPointMapClick">
                                            @ExcursionStrings.ResourceManager.Get("ShowMap")
                                            </a>
                                        </div>
                                        <select data-bind="options: pickuppoints, optionsText: function(d){ return site.utils.date.formatTimeDateIf(site.utils.date.parseIso(d.pickuptime), site.utils.date.parseIso(date)) + '  ' + d.name; }, value: $root.cartinfoPickUpPoint" class="form-control" style="padding: 6px; width:100%;">
                                        </select>                                                                             
                                    </td>
                                </tr>

                                <tr>                            
                                    <td style="vertical-align:middle;" colspan="4">
                                        <span style="font-weight:bold;" data-bind="text: $root.cartinfoPickUpPoint().note"></span>
                                    </td>
                                </tr>
                                <!-- /ko -->

                                <!--ko ifnot: pickuppoints -->
                                <tr>
                                    <td style="vertical-align:middle; color:#cccccc;" colspan="4">
                                        @ExcursionStrings.ResourceManager.Get("OrderPickupHotel")<br />
                                        <select data-bind="options: $root.pickuphotels, optionsText: function(d) { 
                                                return d.ishint ? d.name : (site.utils.date.formatTimeDateIf(site.utils.date.parseIso(d.pickuptime), site.utils.date.parseIso(date)) + ' ' + d.name + ' ' + formatHotelStar(d.strstar, d.star) + ', ' + d.town);
                                            }, value: $root.cartinfoPickUpHotel" class="form-control" style="padding: 6px; width:100%;">
                                        </select>                                                                             
                                    </td>
                                </tr>
                                <!-- /ko -->

                                <tr>
                                    <td colspan="4" style="color:#cccccc;">
                                        @ExcursionStrings.ResourceManager.Get("OrderNote")<br />
                                        <input data-bind="value: $root.cartinfoNote" class="form-control" maxlength="250" type="text" style="width: 100%;" />
                                    </td>
                                </tr>

                                <tr>
                                    <td style="vertical-align:bottom; text-align:right;" colspan="4">
                                      <a href="#" class="bk-book-add-to-cart" data-bind="click:$root.excursionBookingCloseClick">@ExcursionStrings.ResourceManager.Get("DetailReturnToExcursionDate")</a>   
                                         <button type="button" class="btn btn-primary" data-bind="click: $root.excursionAddToCartClick">
                                         @ExcursionStrings.ResourceManager.Get("OrderAddShopCartButton")</button>                                
                                    </td>
                                </tr>                              
                            </table>
                        </div>
                 </div>                
                <!--/ko-->      
                <div class="col-lg-8 col-xs-12" style="padding-right:0;">           
         
                    <div data-bind="template: 'excursion-survey'"></div>                
                </div>
            </div> <!-- row -->   
        </div>
    </div>

    <div data-bind="if: viewVisibilityLoading">             
        <div data-bind="template: 'excursion-loading'"></div>
    </div>

    <!-- Price Confirmation Modal -->
    <div class="modal fade" id="confirmpricemodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="false">
      <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>       
                <h4 class="modal-title" id="myModalLabel" style="color:#777777;">@ExcursionStrings.ResourceManager.Get("OrderTitle")</h4>      
            </div>
            <div class='notification-warnings' data-bind="visible: cartinfoErrors().length > 0">
                <div class="bs-callout bs-callout-danger" style="margin: 15px;">           
                    <h4 style="margin-bottom:5px;">@ExcursionStrings.ResourceManager.Get("ErrorSummary")и</h4> 
                    <ul style="list-style-type: none; padding-left: 0px;" data-bind="foreach: cartinfoErrors">
                        <li><small style="color: #8c8c8c;" data-bind="text: $data"></small></li>
                    </ul>
                </div>      
            </div>    
            <div >
               <div class="modal-body"  data-bind="visible: cartinfoErrors().length == 0">
                    <h3 style="color:#8c8c8c; margin-top:15px;text-align:center;">@ExcursionStrings.ResourceManager.Get("OrderAddShopCartSuccess")</h3>           
                </div>
                <div class="modal-footer" data-bind="visible: cartinfoErrors().length == 0" style="margin-top:0px;">
                    <button type="button" class="btn btn-primary" data-bind="click: navigateBackClick" data-dismiss="modal">@ExcursionStrings.ResourceManager.Get("OrderReturnExcursionList")</button>
                    @if (GuestService.Settings.ServiceBookingUrl == null)
                    {
                        <a href="@Url.Action("index", "booking")" class="btn btn-primary" id="modal-body-move">@ExcursionStrings.ResourceManager.Get("OrderGoShoppingCart")</a>
                    }
                    else
                    {
                        <a href="@GuestService.Settings.ServiceBookingUrl" class="btn btn-primary" id="modal-body-move">@ExcursionStrings.ResourceManager.Get("OrderGoShoppingCart")</a>
                    }
                </div>

                <div class="modal-footer" data-bind="visible: cartinfoErrors().length > 0" style="margin-top:0px;">                     
                    <button type="button" class="btn btn-primary" data-dismiss="modal">
                    @ExcursionStrings.ResourceManager.Get("OrderCloseButton")</button>
                </div>
            </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <!-- Add Rating Conformation Modal -->
    <div class="modal fade" id="confirmaddratingmodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="false">
      <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>       
                <h4 class="modal-title" style="color:#777777;">@ExcursionStrings.ResourceManager.Get("AddReviewTitle")</h4>      
            </div>
            <div >
                <form method="post" action="@Url.Action("addrating", "excursion")">
                    <input type="hidden" name="id" value="" />
                    <div class="modal-body">
                        <h3 style="color:#8c8c8c; margin-top:15px;text-align:center;">@ExcursionStrings.ResourceManager.Get("AddReviewText")</h3>           
                    </div>

                    <div class="modal-footer"  style="margin-top:0px;">                     
                        <button type="button" class="btn" data-dismiss="modal">@ExcursionStrings.ResourceManager.Get("AddReviewNo")</button>
                        <button type="submit" class="btn btn-primary" >@ExcursionStrings.ResourceManager.Get("AddReviewYes")</button>
                    </div>
                </form>
            </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <div class="modal fade" id="mapmodals">
        <div class="modal-dialog" style="width:90%;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>              
                    <h4 class="modal-title" id="myModalLabel" style="color:#777777;">@ExcursionStrings.ResourceManager.Get("OrderPickUp")</h4>
                </div>
                <div class="modal-body">
                    <div id="map_canvas" style="height:400px;"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">
                    @ExcursionStrings.ResourceManager.Get("OrderCloseButton")</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</div>

